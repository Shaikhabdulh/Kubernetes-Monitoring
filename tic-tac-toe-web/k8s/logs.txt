
==> Audit <==
|---------|-------|----------|-------|---------|---------------------|---------------------|
| Command | Args  | Profile  | User  | Version |     Start Time      |      End Time       |
|---------|-------|----------|-------|---------|---------------------|---------------------|
| start   |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:07 UTC | 23 Jul 25 12:08 UTC |
| ip      |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:10 UTC | 23 Jul 25 12:10 UTC |
| service |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:11 UTC |                     |
| ip      |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:12 UTC | 23 Jul 25 12:12 UTC |
| ip      |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:13 UTC | 23 Jul 25 12:13 UTC |
| service |       | minikube | abdul | v1.36.0 | 23 Jul 25 12:16 UTC |                     |
| service | --all | minikube | abdul | v1.36.0 | 23 Jul 25 12:16 UTC |                     |
|---------|-------|----------|-------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2025/07/23 12:07:08
Running on machine: Employee
Binary: Built with gc go1.24.0 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0723 12:07:08.348123  194801 out.go:345] Setting OutFile to fd 1 ...
I0723 12:07:08.348537  194801 out.go:397] isatty.IsTerminal(1) = true
I0723 12:07:08.348540  194801 out.go:358] Setting ErrFile to fd 2...
I0723 12:07:08.348543  194801 out.go:397] isatty.IsTerminal(2) = true
I0723 12:07:08.348661  194801 root.go:338] Updating PATH: /home/abdul/.minikube/bin
W0723 12:07:08.348732  194801 root.go:314] Error reading config file at /home/abdul/.minikube/config/config.json: open /home/abdul/.minikube/config/config.json: no such file or directory
I0723 12:07:08.349734  194801 out.go:352] Setting JSON to false
I0723 12:07:08.350440  194801 start.go:130] hostinfo: {"hostname":"Employee","uptime":25216,"bootTime":1753247212,"procs":39,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"24.04","kernelVersion":"6.6.87.2-microsoft-standard-WSL2","kernelArch":"x86_64","virtualizationSystem":"kvm","virtualizationRole":"guest","hostId":"7cb68f4f-7683-4e8b-a571-20c9e6194ccc"}
I0723 12:07:08.350537  194801 start.go:140] virtualization: kvm guest
I0723 12:07:08.362190  194801 out.go:177] 😄  minikube v1.36.0 on Ubuntu 24.04 (kvm/amd64)
W0723 12:07:08.375995  194801 preload.go:293] Failed to list preload files: open /home/abdul/.minikube/cache/preloaded-tarball: no such file or directory
I0723 12:07:08.376035  194801 notify.go:220] Checking for updates...
I0723 12:07:08.376190  194801 driver.go:404] Setting default libvirt URI to qemu:///system
I0723 12:07:08.376211  194801 global.go:112] Querying for installed drivers using PATH=/home/abdul/.minikube/bin:/home/abdul/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/VMware/VMware Workstation/bin/:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files (x86)/WinSCP/:/mnt/c/Program Files/nodejs/:/mnt/c/Users/f_dev_1/AppData/Local/Volta/bin:/mnt/c/Users/f_dev_1/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/f_dev_1/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/f_dev_1/AppData/Roaming/npm:/mnt/c/Users/f_dev_1/.vscode/extensions/ms-python.debugpy-2025.10.0-win32-x64/bundled/scripts/noConfigScripts:/mnt/c/Users/f_dev_1/AppData/Roaming/Code/User/globalStorage/github.copilot-chat/debugCommand:/snap/bin
I0723 12:07:08.386006  194801 global.go:133] none default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0723 12:07:08.404794  194801 global.go:133] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0723 12:07:08.404851  194801 global.go:133] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0723 12:07:08.426688  194801 global.go:133] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I0723 12:07:08.447738  194801 global.go:133] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0723 12:07:08.490675  194801 global.go:133] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0723 12:07:08.513122  194801 global.go:133] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "vmrun": executable file not found in $PATH Reason: Fix:Install vmrun Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0723 12:07:08.532794  194801 docker.go:123] docker version: linux-27.5.1:
I0723 12:07:08.532869  194801 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0723 12:07:08.551003  194801 info.go:266] docker info: {ID:21a4be83-fe2c-4dc5-bf96-9c4556b122c5 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:23 OomKillDisable:false NGoroutines:42 SystemTime:2025-07-23 12:07:08.543527274 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.6.87.2-microsoft-standard-WSL2 OperatingSystem:Ubuntu 24.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8162340864 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:Employee Labels:[] ExperimentalBuild:false ServerVersion:27.5.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0723 12:07:08.551070  194801 docker.go:318] overlay module found
I0723 12:07:08.551102  194801 global.go:133] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0723 12:07:08.551118  194801 driver.go:326] not recommending "none" due to default: false
I0723 12:07:08.551120  194801 driver.go:326] not recommending "ssh" due to default: false
I0723 12:07:08.551132  194801 driver.go:361] Picked: docker
I0723 12:07:08.551135  194801 driver.go:362] Alternatives: [none ssh]
I0723 12:07:08.551138  194801 driver.go:363] Rejects: [podman kvm2 qemu2 virtualbox vmware]
I0723 12:07:08.558414  194801 out.go:177] ✨  Automatically selected the docker driver. Other choices: none, ssh
I0723 12:07:08.565273  194801 start.go:304] selected driver: docker
I0723 12:07:08.565279  194801 start.go:908] validating driver "docker" against <nil>
I0723 12:07:08.565286  194801 start.go:919] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0723 12:07:08.565372  194801 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0723 12:07:08.583440  194801 info.go:266] docker info: {ID:21a4be83-fe2c-4dc5-bf96-9c4556b122c5 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:23 OomKillDisable:false NGoroutines:42 SystemTime:2025-07-23 12:07:08.576155099 +0000 UTC LoggingDriver:json-file CgroupDriver:systemd NEventsListener:0 KernelVersion:6.6.87.2-microsoft-standard-WSL2 OperatingSystem:Ubuntu 24.04.2 LTS OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8162340864 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy: Name:Employee Labels:[] ExperimentalBuild:false ServerVersion:27.5.1 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID: Expected:} RuncCommit:{ID: Expected:} InitCommit:{ID: Expected:} SecurityOptions:[name=seccomp,profile=builtin name=cgroupns] ProductLicense: Warnings:<nil> ServerErrors:[] ClientInfo:{Debug:false Plugins:[] Warnings:<nil>}}
I0723 12:07:08.583571  194801 start_flags.go:311] no existing cluster config was found, will generate one from the flags 
I0723 12:07:08.584211  194801 start_flags.go:394] Using suggested 2200MB memory alloc based on sys=7784MB, container=7784MB
I0723 12:07:08.584381  194801 start_flags.go:958] Wait components to verify : map[apiserver:true system_pods:true]
I0723 12:07:08.591955  194801 out.go:177] 📌  Using Docker driver with root privileges
I0723 12:07:08.598247  194801 cni.go:84] Creating CNI manager for ""
I0723 12:07:08.598308  194801 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:07:08.598314  194801 start_flags.go:320] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0723 12:07:08.598366  194801 start.go:347] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/abdul:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0723 12:07:08.606327  194801 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0723 12:07:08.612829  194801 cache.go:121] Beginning downloading kic base image for docker with docker
I0723 12:07:08.620064  194801 out.go:177] 🚜  Pulling base image v0.0.47 ...
I0723 12:07:08.626701  194801 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0723 12:07:08.626795  194801 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local docker daemon
I0723 12:07:08.643108  194801 image.go:100] Found gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b in local docker daemon, skipping pull
I0723 12:07:08.643115  194801 cache.go:145] gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b exists in daemon, skipping load
I0723 12:07:08.921951  194801 preload.go:118] Found remote preload: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.33.1/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4
I0723 12:07:08.921971  194801 cache.go:56] Caching tarball of preloaded images
I0723 12:07:08.922209  194801 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0723 12:07:08.933365  194801 out.go:177] 💾  Downloading Kubernetes v1.33.1 preload ...
I0723 12:07:08.942078  194801 preload.go:236] getting checksum for preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0723 12:07:09.343140  194801 download.go:108] Downloading: https://storage.googleapis.com/minikube-preloaded-volume-tarballs/v18/v1.33.1/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4?checksum=md5:426761ca53f0b79ef3d0619b4605274e -> /home/abdul/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4
I0723 12:07:35.273390  194801 preload.go:247] saving checksum for preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0723 12:07:35.273495  194801 preload.go:254] verifying checksum of /home/abdul/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4 ...
I0723 12:07:35.802030  194801 cache.go:59] Finished verifying existence of preloaded tar for v1.33.1 on docker
I0723 12:07:35.802319  194801 profile.go:143] Saving config to /home/abdul/.minikube/profiles/minikube/config.json ...
I0723 12:07:35.802341  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/config.json: {Name:mka5b77382bfeeff612f114390c7299cac55acbe Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:07:35.802477  194801 cache.go:230] Successfully downloaded all kic artifacts
I0723 12:07:35.802490  194801 start.go:360] acquireMachinesLock for minikube: {Name:mkcbfe6145bf21b5f063b498e36559af0511e30d Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0723 12:07:35.802502  194801 start.go:364] duration metric: took 8.075µs to acquireMachinesLock for "minikube"
I0723 12:07:35.802514  194801 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/abdul:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0723 12:07:35.802569  194801 start.go:125] createHost starting for "" (driver="docker")
I0723 12:07:35.813778  194801 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
I0723 12:07:35.814056  194801 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0723 12:07:35.814119  194801 client.go:168] LocalClient.Create starting
I0723 12:07:35.814308  194801 main.go:141] libmachine: Creating CA: /home/abdul/.minikube/certs/ca.pem
I0723 12:07:35.891391  194801 main.go:141] libmachine: Creating client certificate: /home/abdul/.minikube/certs/cert.pem
I0723 12:07:35.916944  194801 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0723 12:07:35.932630  194801 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0723 12:07:35.932689  194801 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0723 12:07:35.932698  194801 cli_runner.go:164] Run: docker network inspect minikube
W0723 12:07:35.944545  194801 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0723 12:07:35.944561  194801 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0723 12:07:35.944571  194801 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0723 12:07:35.944635  194801 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0723 12:07:36.023429  194801 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc00184d820}
I0723 12:07:36.023505  194801 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0723 12:07:36.023551  194801 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0723 12:07:36.677701  194801 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0723 12:07:36.677720  194801 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0723 12:07:36.677766  194801 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0723 12:07:36.689229  194801 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0723 12:07:36.706656  194801 oci.go:103] Successfully created a docker volume minikube
I0723 12:07:36.706713  194801 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib
I0723 12:07:40.929255  194801 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -d /var/lib: (4.22251679s)
I0723 12:07:40.929270  194801 oci.go:107] Successfully prepared a docker volume minikube
I0723 12:07:40.929284  194801 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0723 12:07:40.929298  194801 kic.go:194] Starting extracting preloaded images to volume ...
I0723 12:07:40.929339  194801 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/abdul/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir
I0723 12:07:47.773560  194801 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/abdul/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.33.1-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b -I lz4 -xf /preloaded.tar -C /extractDir: (6.84419551s)
I0723 12:07:47.773577  194801 kic.go:203] duration metric: took 6.84427583s to extract preloaded images to volume ...
W0723 12:07:47.773656  194801 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
W0723 12:07:47.773671  194801 oci.go:249] Your kernel does not support CPU cfs period/quota or the cgroup is not mounted.
I0723 12:07:47.773698  194801 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0723 12:07:47.791002  194801 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b
I0723 12:07:52.370166  194801 cli_runner.go:217] Completed: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b: (2.378813229s)
I0723 12:07:52.370218  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0723 12:07:52.384101  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:07:52.397760  194801 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0723 12:07:52.475496  194801 oci.go:144] the created container "minikube" has a running status.
I0723 12:07:52.475524  194801 kic.go:225] Creating ssh key for kic: /home/abdul/.minikube/machines/minikube/id_rsa...
I0723 12:07:52.521109  194801 kic_runner.go:191] docker (temp): /home/abdul/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0723 12:07:52.587103  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:07:52.605109  194801 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0723 12:07:52.605118  194801 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0723 12:07:52.667088  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:07:52.679972  194801 machine.go:93] provisionDockerMachine start ...
I0723 12:07:52.680038  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:52.692960  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:52.693158  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:52.693164  194801 main.go:141] libmachine: About to run SSH command:
hostname
I0723 12:07:52.694321  194801 main.go:141] libmachine: Error dialing TCP: ssh: handshake failed: read tcp 127.0.0.1:46922->127.0.0.1:44645: read: connection reset by peer
I0723 12:07:55.844050  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0723 12:07:55.844065  194801 ubuntu.go:169] provisioning hostname "minikube"
I0723 12:07:55.844150  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:55.858762  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:55.858946  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:55.858952  194801 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0723 12:07:56.031588  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0723 12:07:56.031738  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:56.049798  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:56.050022  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:56.050033  194801 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0723 12:07:56.178505  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0723 12:07:56.178524  194801 ubuntu.go:175] set auth options {CertDir:/home/abdul/.minikube CaCertPath:/home/abdul/.minikube/certs/ca.pem CaPrivateKeyPath:/home/abdul/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/abdul/.minikube/machines/server.pem ServerKeyPath:/home/abdul/.minikube/machines/server-key.pem ClientKeyPath:/home/abdul/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/abdul/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/abdul/.minikube}
I0723 12:07:56.178560  194801 ubuntu.go:177] setting up certificates
I0723 12:07:56.178570  194801 provision.go:84] configureAuth start
I0723 12:07:56.178640  194801 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:07:56.197666  194801 provision.go:143] copyHostCerts
I0723 12:07:56.197739  194801 exec_runner.go:151] cp: /home/abdul/.minikube/certs/key.pem --> /home/abdul/.minikube/key.pem (1675 bytes)
I0723 12:07:56.198150  194801 exec_runner.go:151] cp: /home/abdul/.minikube/certs/ca.pem --> /home/abdul/.minikube/ca.pem (1074 bytes)
I0723 12:07:56.198206  194801 exec_runner.go:151] cp: /home/abdul/.minikube/certs/cert.pem --> /home/abdul/.minikube/cert.pem (1119 bytes)
I0723 12:07:56.198242  194801 provision.go:117] generating server cert: /home/abdul/.minikube/machines/server.pem ca-key=/home/abdul/.minikube/certs/ca.pem private-key=/home/abdul/.minikube/certs/ca-key.pem org=abdul.minikube san=[127.0.0.1 192.168.49.2 localhost minikube]
I0723 12:07:56.420159  194801 provision.go:177] copyRemoteCerts
I0723 12:07:56.420211  194801 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0723 12:07:56.420238  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:56.439298  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:07:56.536077  194801 ssh_runner.go:362] scp /home/abdul/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0723 12:07:56.567128  194801 ssh_runner.go:362] scp /home/abdul/.minikube/machines/server.pem --> /etc/docker/server.pem (1176 bytes)
I0723 12:07:56.598207  194801 ssh_runner.go:362] scp /home/abdul/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0723 12:07:56.629998  194801 provision.go:87] duration metric: took 451.405052ms to configureAuth
I0723 12:07:56.630037  194801 ubuntu.go:193] setting minikube options for container-runtime
I0723 12:07:56.630249  194801 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0723 12:07:56.630309  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:56.647004  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:56.647309  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:56.647319  194801 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0723 12:07:56.779313  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0723 12:07:56.779332  194801 ubuntu.go:71] root file system type: overlay
I0723 12:07:56.779519  194801 provision.go:314] Updating docker unit: /lib/systemd/system/docker.service ...
I0723 12:07:56.779611  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:56.796634  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:56.796855  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:56.796897  194801 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %s "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0723 12:07:56.942860  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0723 12:07:56.942985  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:07:56.960923  194801 main.go:141] libmachine: Using SSH client type: native
I0723 12:07:56.961122  194801 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x83bb20] 0x83e820 <nil>  [] 0s} 127.0.0.1 44645 <nil> <nil>}
I0723 12:07:56.961131  194801 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0723 12:08:01.287718  194801 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2025-04-18 09:50:48.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2025-07-23 12:07:56.936942766 +0000
@@ -1,46 +1,49 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target nss-lookup.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
+LimitNOFILE=infinity
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0723 12:08:01.287764  194801 machine.go:96] duration metric: took 8.607781414s to provisionDockerMachine
I0723 12:08:01.287784  194801 client.go:171] duration metric: took 23.273347574s to LocalClient.Create
I0723 12:08:01.287861  194801 start.go:167] duration metric: took 23.273484458s to libmachine.API.Create "minikube"
I0723 12:08:01.287886  194801 start.go:293] postStartSetup for "minikube" (driver="docker")
I0723 12:08:01.287975  194801 start.go:322] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0723 12:08:01.288105  194801 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0723 12:08:01.288177  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:01.302659  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:01.395083  194801 ssh_runner.go:195] Run: cat /etc/os-release
I0723 12:08:01.398764  194801 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0723 12:08:01.398776  194801 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0723 12:08:01.398780  194801 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0723 12:08:01.398783  194801 info.go:137] Remote host: Ubuntu 22.04.5 LTS
I0723 12:08:01.398805  194801 filesync.go:126] Scanning /home/abdul/.minikube/addons for local assets ...
I0723 12:08:01.398885  194801 filesync.go:126] Scanning /home/abdul/.minikube/files for local assets ...
I0723 12:08:01.398913  194801 start.go:296] duration metric: took 111.022848ms for postStartSetup
I0723 12:08:01.399449  194801 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:08:01.412882  194801 profile.go:143] Saving config to /home/abdul/.minikube/profiles/minikube/config.json ...
I0723 12:08:01.413075  194801 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0723 12:08:01.413102  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:01.425979  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:01.516664  194801 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0723 12:08:01.522031  194801 start.go:128] duration metric: took 23.519125148s to createHost
I0723 12:08:01.522070  194801 start.go:83] releasing machines lock for "minikube", held for 23.519249696s
I0723 12:08:01.522127  194801 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0723 12:08:01.536186  194801 ssh_runner.go:195] Run: cat /version.json
I0723 12:08:01.536218  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:01.536275  194801 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0723 12:08:01.536307  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:01.552971  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:01.553322  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:01.643349  194801 ssh_runner.go:195] Run: systemctl --version
I0723 12:08:01.894690  194801 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0723 12:08:01.900032  194801 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0723 12:08:01.930487  194801 cni.go:230] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0723 12:08:01.930546  194801 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%p, " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0723 12:08:02.322437  194801 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0723 12:08:02.322522  194801 start.go:495] detecting cgroup driver to use...
I0723 12:08:02.322577  194801 detect.go:190] detected "systemd" cgroup driver on host os
I0723 12:08:02.323059  194801 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0723 12:08:02.343380  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.10"|' /etc/containerd/config.toml"
I0723 12:08:02.354804  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0723 12:08:02.364652  194801 containerd.go:146] configuring containerd to use "systemd" as cgroup driver...
I0723 12:08:02.364746  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = true|g' /etc/containerd/config.toml"
I0723 12:08:02.374189  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0723 12:08:02.437352  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0723 12:08:02.452256  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0723 12:08:02.498338  194801 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0723 12:08:02.514877  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0723 12:08:02.554031  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i '/^ *enable_unprivileged_ports = .*/d' /etc/containerd/config.toml"
I0723 12:08:02.563969  194801 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)\[plugins."io.containerd.grpc.v1.cri"\]|&\n\1  enable_unprivileged_ports = true|' /etc/containerd/config.toml"
I0723 12:08:02.574005  194801 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0723 12:08:02.583243  194801 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0723 12:08:02.594415  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:02.640171  194801 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0723 12:08:03.085876  194801 start.go:495] detecting cgroup driver to use...
I0723 12:08:03.085911  194801 detect.go:190] detected "systemd" cgroup driver on host os
I0723 12:08:03.086029  194801 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0723 12:08:03.120566  194801 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0723 12:08:03.120616  194801 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0723 12:08:03.132709  194801 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %s "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0723 12:08:03.152925  194801 ssh_runner.go:195] Run: which cri-dockerd
I0723 12:08:03.156167  194801 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0723 12:08:03.164858  194801 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (190 bytes)
I0723 12:08:03.187247  194801 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0723 12:08:03.235596  194801 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0723 12:08:03.296626  194801 docker.go:587] configuring docker to use "systemd" as cgroup driver...
I0723 12:08:03.297013  194801 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (129 bytes)
I0723 12:08:03.318737  194801 ssh_runner.go:195] Run: sudo systemctl reset-failed docker
I0723 12:08:03.331457  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:03.381973  194801 ssh_runner.go:195] Run: sudo systemctl restart docker
I0723 12:08:07.016349  194801 ssh_runner.go:235] Completed: sudo systemctl restart docker: (3.634357074s)
I0723 12:08:07.016460  194801 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.socket
I0723 12:08:07.028623  194801 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0723 12:08:07.039599  194801 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0723 12:08:07.088662  194801 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0723 12:08:07.136296  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:07.198541  194801 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0723 12:08:07.254724  194801 ssh_runner.go:195] Run: sudo systemctl reset-failed cri-docker.service
I0723 12:08:07.267399  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:07.315202  194801 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.service
I0723 12:08:07.437744  194801 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service cri-docker.service
I0723 12:08:07.465865  194801 start.go:542] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0723 12:08:07.465920  194801 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0723 12:08:07.469776  194801 start.go:563] Will wait 60s for crictl version
I0723 12:08:07.469811  194801 ssh_runner.go:195] Run: which crictl
I0723 12:08:07.472981  194801 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0723 12:08:07.513080  194801 start.go:579] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  28.1.1
RuntimeApiVersion:  v1
I0723 12:08:07.513141  194801 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0723 12:08:07.539031  194801 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0723 12:08:07.577539  194801 out.go:235] 🐳  Preparing Kubernetes v1.33.1 on Docker 28.1.1 ...
I0723 12:08:07.577825  194801 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0723 12:08:07.594135  194801 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0723 12:08:07.598040  194801 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0723 12:08:07.609393  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0723 12:08:07.624442  194801 kubeadm.go:875] updating cluster {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/abdul:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} ...
I0723 12:08:07.624574  194801 preload.go:131] Checking if preload exists for k8s version v1.33.1 and runtime docker
I0723 12:08:07.624660  194801 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0723 12:08:07.640554  194801 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0723 12:08:07.640575  194801 docker.go:632] Images already preloaded, skipping extraction
I0723 12:08:07.640621  194801 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0723 12:08:07.656800  194801 docker.go:702] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.33.1
registry.k8s.io/kube-controller-manager:v1.33.1
registry.k8s.io/kube-scheduler:v1.33.1
registry.k8s.io/kube-proxy:v1.33.1
registry.k8s.io/etcd:3.5.21-0
registry.k8s.io/coredns/coredns:v1.12.0
registry.k8s.io/pause:3.10
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0723 12:08:07.656811  194801 cache_images.go:84] Images are preloaded, skipping loading
I0723 12:08:07.656835  194801 kubeadm.go:926] updating node { 192.168.49.2 8443 v1.33.1 docker true true} ...
I0723 12:08:07.656957  194801 kubeadm.go:938] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.33.1/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:}
I0723 12:08:07.657005  194801 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0723 12:08:07.721587  194801 cni.go:84] Creating CNI manager for ""
I0723 12:08:07.721609  194801 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:08:07.721626  194801 kubeadm.go:84] Using pod CIDR: 10.244.0.0/16
I0723 12:08:07.721647  194801 kubeadm.go:189] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.33.1 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:systemd ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[containerRuntimeEndpoint:unix:///var/run/cri-dockerd.sock hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0723 12:08:07.721767  194801 kubeadm.go:195] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    - name: "node-ip"
      value: "192.168.49.2"
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    - name: "enable-admission-plugins"
      value: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    - name: "allocate-node-cidrs"
      value: "true"
    - name: "leader-elect"
      value: "false"
scheduler:
  extraArgs:
    - name: "leader-elect"
      value: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      - name: "proxy-refresh-interval"
        value: "70000"
kubernetesVersion: v1.33.1
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: systemd
containerRuntimeEndpoint: unix:///var/run/cri-dockerd.sock
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0723 12:08:07.721824  194801 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.33.1
I0723 12:08:07.730492  194801 binaries.go:44] Found k8s binaries, skipping transfer
I0723 12:08:07.730537  194801 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0723 12:08:07.739199  194801 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (307 bytes)
I0723 12:08:07.761395  194801 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0723 12:08:07.783941  194801 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2285 bytes)
I0723 12:08:07.804683  194801 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0723 12:08:07.808818  194801 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0723 12:08:07.819169  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:07.877874  194801 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0723 12:08:07.910905  194801 certs.go:68] Setting up /home/abdul/.minikube/profiles/minikube for IP: 192.168.49.2
I0723 12:08:07.910919  194801 certs.go:194] generating shared ca certs ...
I0723 12:08:07.910963  194801 certs.go:226] acquiring lock for ca certs: {Name:mk6b111f1fac0baaa7bb47cb447f7b764b3c6db1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:07.911268  194801 certs.go:240] generating "minikubeCA" ca cert: /home/abdul/.minikube/ca.key
I0723 12:08:08.086641  194801 crypto.go:156] Writing cert to /home/abdul/.minikube/ca.crt ...
I0723 12:08:08.086652  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/ca.crt: {Name:mk1b39e6308d6bce1465c4b2aa8d71b8fbb96e0e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.086790  194801 crypto.go:164] Writing key to /home/abdul/.minikube/ca.key ...
I0723 12:08:08.086794  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/ca.key: {Name:mkce556c89b7f877786c3d5ed8182bba29ca6892 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.086848  194801 certs.go:240] generating "proxyClientCA" ca cert: /home/abdul/.minikube/proxy-client-ca.key
I0723 12:08:08.286232  194801 crypto.go:156] Writing cert to /home/abdul/.minikube/proxy-client-ca.crt ...
I0723 12:08:08.286245  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/proxy-client-ca.crt: {Name:mkc20def50dec25a17b5001e102d39fc7e9fe393 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.286399  194801 crypto.go:164] Writing key to /home/abdul/.minikube/proxy-client-ca.key ...
I0723 12:08:08.286403  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/proxy-client-ca.key: {Name:mk99761a80a0ec589ecb838228c96557a2d08776 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.286505  194801 certs.go:256] generating profile certs ...
I0723 12:08:08.286551  194801 certs.go:363] generating signed profile cert for "minikube-user": /home/abdul/.minikube/profiles/minikube/client.key
I0723 12:08:08.286559  194801 crypto.go:68] Generating cert /home/abdul/.minikube/profiles/minikube/client.crt with IP's: []
I0723 12:08:08.489052  194801 crypto.go:156] Writing cert to /home/abdul/.minikube/profiles/minikube/client.crt ...
I0723 12:08:08.489064  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/client.crt: {Name:mk318d4801ddd38bdc03d206237c4c608b037790 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.489202  194801 crypto.go:164] Writing key to /home/abdul/.minikube/profiles/minikube/client.key ...
I0723 12:08:08.489207  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/client.key: {Name:mk9a31d5f753d399d382ac41f1d15145d17f5aee Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.489256  194801 certs.go:363] generating signed profile cert for "minikube": /home/abdul/.minikube/profiles/minikube/apiserver.key.7fb57e3c
I0723 12:08:08.489269  194801 crypto.go:68] Generating cert /home/abdul/.minikube/profiles/minikube/apiserver.crt.7fb57e3c with IP's: [10.96.0.1 127.0.0.1 10.0.0.1 192.168.49.2]
I0723 12:08:08.590224  194801 crypto.go:156] Writing cert to /home/abdul/.minikube/profiles/minikube/apiserver.crt.7fb57e3c ...
I0723 12:08:08.590237  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/apiserver.crt.7fb57e3c: {Name:mk31ae9d500ea5186b1e8a73931ddfdec506b7d5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.590384  194801 crypto.go:164] Writing key to /home/abdul/.minikube/profiles/minikube/apiserver.key.7fb57e3c ...
I0723 12:08:08.590388  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/apiserver.key.7fb57e3c: {Name:mk376d88ad44c7e299d7a3a2bb820ea89843fa85 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.590455  194801 certs.go:381] copying /home/abdul/.minikube/profiles/minikube/apiserver.crt.7fb57e3c -> /home/abdul/.minikube/profiles/minikube/apiserver.crt
I0723 12:08:08.590532  194801 certs.go:385] copying /home/abdul/.minikube/profiles/minikube/apiserver.key.7fb57e3c -> /home/abdul/.minikube/profiles/minikube/apiserver.key
I0723 12:08:08.590563  194801 certs.go:363] generating signed profile cert for "aggregator": /home/abdul/.minikube/profiles/minikube/proxy-client.key
I0723 12:08:08.590572  194801 crypto.go:68] Generating cert /home/abdul/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0723 12:08:08.833427  194801 crypto.go:156] Writing cert to /home/abdul/.minikube/profiles/minikube/proxy-client.crt ...
I0723 12:08:08.833441  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/proxy-client.crt: {Name:mk3ee1cc49a2e50ae0bc990b5a543d94da41f561 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.833579  194801 crypto.go:164] Writing key to /home/abdul/.minikube/profiles/minikube/proxy-client.key ...
I0723 12:08:08.833583  194801 lock.go:35] WriteFile acquiring /home/abdul/.minikube/profiles/minikube/proxy-client.key: {Name:mk8ba1f0e9ff294a89bac8e34e393c662e59e900 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:08.833757  194801 certs.go:484] found cert: /home/abdul/.minikube/certs/ca-key.pem (1679 bytes)
I0723 12:08:08.833788  194801 certs.go:484] found cert: /home/abdul/.minikube/certs/ca.pem (1074 bytes)
I0723 12:08:08.833826  194801 certs.go:484] found cert: /home/abdul/.minikube/certs/cert.pem (1119 bytes)
I0723 12:08:08.833839  194801 certs.go:484] found cert: /home/abdul/.minikube/certs/key.pem (1675 bytes)
I0723 12:08:08.834606  194801 ssh_runner.go:362] scp /home/abdul/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0723 12:08:08.866416  194801 ssh_runner.go:362] scp /home/abdul/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0723 12:08:08.900875  194801 ssh_runner.go:362] scp /home/abdul/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0723 12:08:08.932609  194801 ssh_runner.go:362] scp /home/abdul/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0723 12:08:08.964664  194801 ssh_runner.go:362] scp /home/abdul/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1411 bytes)
I0723 12:08:08.995495  194801 ssh_runner.go:362] scp /home/abdul/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0723 12:08:09.027736  194801 ssh_runner.go:362] scp /home/abdul/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0723 12:08:09.058695  194801 ssh_runner.go:362] scp /home/abdul/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0723 12:08:09.088967  194801 ssh_runner.go:362] scp /home/abdul/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0723 12:08:09.119127  194801 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0723 12:08:09.140518  194801 ssh_runner.go:195] Run: openssl version
I0723 12:08:09.145924  194801 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0723 12:08:09.156152  194801 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0723 12:08:09.160096  194801 certs.go:528] hashing: -rw-r--r-- 1 root root 1111 Jul 23 12:08 /usr/share/ca-certificates/minikubeCA.pem
I0723 12:08:09.160171  194801 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0723 12:08:09.166128  194801 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0723 12:08:09.176057  194801 ssh_runner.go:195] Run: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt
I0723 12:08:09.179627  194801 certs.go:399] 'apiserver-kubelet-client' cert doesn't exist, likely first start: stat /var/lib/minikube/certs/apiserver-kubelet-client.crt: Process exited with status 1
stdout:

stderr:
stat: cannot statx '/var/lib/minikube/certs/apiserver-kubelet-client.crt': No such file or directory
I0723 12:08:09.179652  194801 kubeadm.go:392] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.47@sha256:6ed579c9292b4370177b7ef3c42cc4b4a6dcd0735a1814916cbc22c8bf38412b Memory:2200 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.33.1 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/abdul:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0723 12:08:09.179727  194801 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0723 12:08:09.195130  194801 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0723 12:08:09.204267  194801 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0723 12:08:09.213627  194801 kubeadm.go:214] ignoring SystemVerification for kubeadm because of docker driver
I0723 12:08:09.213675  194801 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0723 12:08:09.224343  194801 kubeadm.go:155] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0723 12:08:09.224353  194801 kubeadm.go:157] found existing configuration files:

I0723 12:08:09.224413  194801 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0723 12:08:09.234772  194801 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/admin.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/admin.conf: No such file or directory
I0723 12:08:09.234852  194801 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/admin.conf
I0723 12:08:09.244108  194801 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0723 12:08:09.253937  194801 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/kubelet.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/kubelet.conf: No such file or directory
I0723 12:08:09.253971  194801 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/kubelet.conf
I0723 12:08:09.264368  194801 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0723 12:08:09.274085  194801 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/controller-manager.conf: No such file or directory
I0723 12:08:09.274125  194801 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0723 12:08:09.284342  194801 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0723 12:08:09.295444  194801 kubeadm.go:163] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
grep: /etc/kubernetes/scheduler.conf: No such file or directory
I0723 12:08:09.295498  194801 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0723 12:08:09.304695  194801 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.33.1:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0723 12:08:09.374723  194801 kubeadm.go:310] [init] Using Kubernetes version: v1.33.1
I0723 12:08:09.374794  194801 kubeadm.go:310] [preflight] Running pre-flight checks
I0723 12:08:09.886348  194801 kubeadm.go:310] [preflight] Pulling images required for setting up a Kubernetes cluster
I0723 12:08:09.886456  194801 kubeadm.go:310] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0723 12:08:09.886530  194801 kubeadm.go:310] [preflight] You can also perform this action beforehand using 'kubeadm config images pull'
I0723 12:08:09.963515  194801 kubeadm.go:310] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0723 12:08:09.978633  194801 out.go:235]     ▪ Generating certificates and keys ...
I0723 12:08:09.978770  194801 kubeadm.go:310] [certs] Using existing ca certificate authority
I0723 12:08:09.978841  194801 kubeadm.go:310] [certs] Using existing apiserver certificate and key on disk
I0723 12:08:10.089482  194801 kubeadm.go:310] [certs] Generating "apiserver-kubelet-client" certificate and key
I0723 12:08:10.173535  194801 kubeadm.go:310] [certs] Generating "front-proxy-ca" certificate and key
I0723 12:08:10.288259  194801 kubeadm.go:310] [certs] Generating "front-proxy-client" certificate and key
I0723 12:08:10.408836  194801 kubeadm.go:310] [certs] Generating "etcd/ca" certificate and key
I0723 12:08:10.544470  194801 kubeadm.go:310] [certs] Generating "etcd/server" certificate and key
I0723 12:08:10.544558  194801 kubeadm.go:310] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0723 12:08:10.742144  194801 kubeadm.go:310] [certs] Generating "etcd/peer" certificate and key
I0723 12:08:10.742314  194801 kubeadm.go:310] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0723 12:08:10.773823  194801 kubeadm.go:310] [certs] Generating "etcd/healthcheck-client" certificate and key
I0723 12:08:10.917935  194801 kubeadm.go:310] [certs] Generating "apiserver-etcd-client" certificate and key
I0723 12:08:11.000666  194801 kubeadm.go:310] [certs] Generating "sa" key and public key
I0723 12:08:11.000724  194801 kubeadm.go:310] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0723 12:08:11.130096  194801 kubeadm.go:310] [kubeconfig] Writing "admin.conf" kubeconfig file
I0723 12:08:11.354262  194801 kubeadm.go:310] [kubeconfig] Writing "super-admin.conf" kubeconfig file
I0723 12:08:11.364761  194801 kubeadm.go:310] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0723 12:08:11.533938  194801 kubeadm.go:310] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0723 12:08:11.686261  194801 kubeadm.go:310] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0723 12:08:11.686706  194801 kubeadm.go:310] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0723 12:08:11.688172  194801 kubeadm.go:310] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0723 12:08:11.791423  194801 out.go:235]     ▪ Booting up control plane ...
I0723 12:08:11.791556  194801 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0723 12:08:11.791625  194801 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0723 12:08:11.791683  194801 kubeadm.go:310] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0723 12:08:11.796018  194801 kubeadm.go:310] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0723 12:08:11.801917  194801 kubeadm.go:310] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0723 12:08:11.801964  194801 kubeadm.go:310] [kubelet-start] Starting the kubelet
I0723 12:08:11.882850  194801 kubeadm.go:310] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests"
I0723 12:08:11.882931  194801 kubeadm.go:310] [kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
I0723 12:08:12.384066  194801 kubeadm.go:310] [kubelet-check] The kubelet is healthy after 501.385352ms
I0723 12:08:12.385710  194801 kubeadm.go:310] [control-plane-check] Waiting for healthy control plane components. This can take up to 4m0s
I0723 12:08:12.385805  194801 kubeadm.go:310] [control-plane-check] Checking kube-apiserver at https://192.168.49.2:8443/livez
I0723 12:08:12.385921  194801 kubeadm.go:310] [control-plane-check] Checking kube-controller-manager at https://127.0.0.1:10257/healthz
I0723 12:08:12.386008  194801 kubeadm.go:310] [control-plane-check] Checking kube-scheduler at https://127.0.0.1:10259/livez
I0723 12:08:15.388943  194801 kubeadm.go:310] [control-plane-check] kube-controller-manager is healthy after 3.002977018s
I0723 12:08:16.889627  194801 kubeadm.go:310] [control-plane-check] kube-scheduler is healthy after 4.341127305s
I0723 12:08:18.887033  194801 kubeadm.go:310] [control-plane-check] kube-apiserver is healthy after 6.501127948s
I0723 12:08:19.032552  194801 kubeadm.go:310] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0723 12:08:19.052950  194801 kubeadm.go:310] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0723 12:08:19.086420  194801 kubeadm.go:310] [upload-certs] Skipping phase. Please see --upload-certs
I0723 12:08:19.086613  194801 kubeadm.go:310] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0723 12:08:19.103255  194801 kubeadm.go:310] [bootstrap-token] Using token: fhflp5.0ux6seb8fs987s01
I0723 12:08:19.111512  194801 out.go:235]     ▪ Configuring RBAC rules ...
I0723 12:08:19.111686  194801 kubeadm.go:310] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0723 12:08:19.111763  194801 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0723 12:08:19.119633  194801 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0723 12:08:19.128715  194801 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0723 12:08:19.271870  194801 kubeadm.go:310] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0723 12:08:19.278650  194801 kubeadm.go:310] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0723 12:08:19.298407  194801 kubeadm.go:310] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0723 12:08:19.764232  194801 kubeadm.go:310] [addons] Applied essential addon: CoreDNS
I0723 12:08:20.379048  194801 kubeadm.go:310] [addons] Applied essential addon: kube-proxy
I0723 12:08:20.379643  194801 kubeadm.go:310] 
I0723 12:08:20.379704  194801 kubeadm.go:310] Your Kubernetes control-plane has initialized successfully!
I0723 12:08:20.379708  194801 kubeadm.go:310] 
I0723 12:08:20.379782  194801 kubeadm.go:310] To start using your cluster, you need to run the following as a regular user:
I0723 12:08:20.379791  194801 kubeadm.go:310] 
I0723 12:08:20.379828  194801 kubeadm.go:310]   mkdir -p $HOME/.kube
I0723 12:08:20.379889  194801 kubeadm.go:310]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0723 12:08:20.379972  194801 kubeadm.go:310]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0723 12:08:20.379976  194801 kubeadm.go:310] 
I0723 12:08:20.380024  194801 kubeadm.go:310] Alternatively, if you are the root user, you can run:
I0723 12:08:20.380027  194801 kubeadm.go:310] 
I0723 12:08:20.380073  194801 kubeadm.go:310]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0723 12:08:20.380076  194801 kubeadm.go:310] 
I0723 12:08:20.380123  194801 kubeadm.go:310] You should now deploy a pod network to the cluster.
I0723 12:08:20.380218  194801 kubeadm.go:310] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0723 12:08:20.380290  194801 kubeadm.go:310]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0723 12:08:20.380293  194801 kubeadm.go:310] 
I0723 12:08:20.380394  194801 kubeadm.go:310] You can now join any number of control-plane nodes by copying certificate authorities
I0723 12:08:20.380454  194801 kubeadm.go:310] and service account keys on each node and then running the following as root:
I0723 12:08:20.380458  194801 kubeadm.go:310] 
I0723 12:08:20.380540  194801 kubeadm.go:310]   kubeadm join control-plane.minikube.internal:8443 --token fhflp5.0ux6seb8fs987s01 \
I0723 12:08:20.380658  194801 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:306c31c50dc9a64958c86fcc03e940a2f7307f525855abe9df3e477d3d4c91a0 \
I0723 12:08:20.380677  194801 kubeadm.go:310] 	--control-plane 
I0723 12:08:20.380680  194801 kubeadm.go:310] 
I0723 12:08:20.380767  194801 kubeadm.go:310] Then you can join any number of worker nodes by running the following on each as root:
I0723 12:08:20.380772  194801 kubeadm.go:310] 
I0723 12:08:20.380825  194801 kubeadm.go:310] kubeadm join control-plane.minikube.internal:8443 --token fhflp5.0ux6seb8fs987s01 \
I0723 12:08:20.380886  194801 kubeadm.go:310] 	--discovery-token-ca-cert-hash sha256:306c31c50dc9a64958c86fcc03e940a2f7307f525855abe9df3e477d3d4c91a0 
I0723 12:08:20.382643  194801 kubeadm.go:310] 	[WARNING Swap]: swap is supported for cgroup v2 only. The kubelet must be properly configured to use swap. Please refer to https://kubernetes.io/docs/concepts/architecture/nodes/#swap-memory, or disable swap on the node
I0723 12:08:20.382725  194801 kubeadm.go:310] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0723 12:08:20.382738  194801 cni.go:84] Creating CNI manager for ""
I0723 12:08:20.382747  194801 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0723 12:08:20.390846  194801 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0723 12:08:20.397673  194801 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0723 12:08:20.407781  194801 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (496 bytes)
I0723 12:08:20.429185  194801 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0723 12:08:20.429379  194801 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig label --overwrite nodes minikube minikube.k8s.io/updated_at=2025_07_23T12_08_20_0700 minikube.k8s.io/version=v1.36.0 minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty minikube.k8s.io/name=minikube minikube.k8s.io/primary=true
I0723 12:08:20.429386  194801 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.33.1/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0723 12:08:20.438040  194801 ops.go:34] apiserver oom_adj: -16
I0723 12:08:20.580245  194801 kubeadm.go:1105] duration metric: took 150.876948ms to wait for elevateKubeSystemPrivileges
I0723 12:08:20.580308  194801 kubeadm.go:394] duration metric: took 11.400658639s to StartCluster
I0723 12:08:20.580325  194801 settings.go:142] acquiring lock: {Name:mkef6b3a35700a90d6b7f776e5a5dff2a4bab7f4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:20.580372  194801 settings.go:150] Updating kubeconfig:  /home/abdul/.kube/config
I0723 12:08:20.581046  194801 lock.go:35] WriteFile acquiring /home/abdul/.kube/config: {Name:mk31488a25344f4dfcb891a18e3529b95d9fc621 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0723 12:08:20.581217  194801 start.go:235] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.33.1 ContainerRuntime:docker ControlPlane:true Worker:true}
I0723 12:08:20.581308  194801 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0723 12:08:20.581367  194801 addons.go:511] enable addons start: toEnable=map[ambassador:false amd-gpu-device-plugin:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volcano:false volumesnapshots:false yakd:false]
I0723 12:08:20.581486  194801 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0723 12:08:20.581499  194801 addons.go:238] Setting addon storage-provisioner=true in "minikube"
I0723 12:08:20.581542  194801 host.go:66] Checking if "minikube" exists ...
I0723 12:08:20.581544  194801 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.33.1
I0723 12:08:20.581594  194801 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0723 12:08:20.581623  194801 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0723 12:08:20.581938  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:08:20.582007  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:08:20.592742  194801 out.go:177] 🔎  Verifying Kubernetes components...
I0723 12:08:20.600143  194801 addons.go:238] Setting addon default-storageclass=true in "minikube"
I0723 12:08:20.600170  194801 host.go:66] Checking if "minikube" exists ...
I0723 12:08:20.600213  194801 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0723 12:08:20.600402  194801 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0723 12:08:20.601900  194801 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0723 12:08:20.612166  194801 addons.go:435] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0723 12:08:20.612180  194801 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0723 12:08:20.612251  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:20.618157  194801 addons.go:435] installing /etc/kubernetes/addons/storageclass.yaml
I0723 12:08:20.618174  194801 ssh_runner.go:362] scp storageclass/storageclass.yaml --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0723 12:08:20.618228  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0723 12:08:20.812308  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:20.821205  194801 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.33.1/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0723 12:08:20.826342  194801 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:44645 SSHKeyPath:/home/abdul/.minikube/machines/minikube/id_rsa Username:docker}
I0723 12:08:20.976394  194801 ssh_runner.go:195] Run: sudo systemctl start kubelet
I0723 12:08:21.068424  194801 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0723 12:08:21.074193  194801 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.33.1/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0723 12:08:21.158761  194801 start.go:971] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0723 12:08:21.158883  194801 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0723 12:08:21.176521  194801 api_server.go:52] waiting for apiserver process to appear ...
I0723 12:08:21.176558  194801 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0723 12:08:21.568774  194801 api_server.go:72] duration metric: took 987.534066ms to wait for apiserver process to appear ...
I0723 12:08:21.568917  194801 api_server.go:88] waiting for apiserver healthz status ...
I0723 12:08:21.568978  194801 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:44649/healthz ...
I0723 12:08:21.572983  194801 api_server.go:279] https://127.0.0.1:44649/healthz returned 200:
ok
I0723 12:08:21.574005  194801 api_server.go:141] control plane version: v1.33.1
I0723 12:08:21.574015  194801 api_server.go:131] duration metric: took 5.093761ms to wait for apiserver health ...
I0723 12:08:21.574047  194801 system_pods.go:43] waiting for kube-system pods to appear ...
I0723 12:08:21.575905  194801 out.go:177] 🌟  Enabled addons: default-storageclass, storage-provisioner
I0723 12:08:21.589898  194801 addons.go:514] duration metric: took 1.008564253s for enable addons: enabled=[default-storageclass storage-provisioner]
I0723 12:08:21.607845  194801 system_pods.go:59] 5 kube-system pods found
I0723 12:08:21.607863  194801 system_pods.go:61] "etcd-minikube" [6e0ba133-f138-49f9-89f2-53cf9726fb2f] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0723 12:08:21.607866  194801 system_pods.go:61] "kube-apiserver-minikube" [e2bf716f-7865-413b-94ee-99a6b4444127] Running
I0723 12:08:21.607871  194801 system_pods.go:61] "kube-controller-manager-minikube" [13426904-53fd-408c-9672-d0e0f271561f] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0723 12:08:21.607882  194801 system_pods.go:61] "kube-scheduler-minikube" [9fb084d6-f3dc-4d02-abc0-936c23a51568] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0723 12:08:21.607884  194801 system_pods.go:61] "storage-provisioner" [c1b388db-f9da-4f39-84d3-27a387df6d47] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.)
I0723 12:08:21.607890  194801 system_pods.go:74] duration metric: took 33.828746ms to wait for pod list to return data ...
I0723 12:08:21.607896  194801 kubeadm.go:578] duration metric: took 1.026665963s to wait for: map[apiserver:true system_pods:true]
I0723 12:08:21.607909  194801 node_conditions.go:102] verifying NodePressure condition ...
I0723 12:08:21.612164  194801 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0723 12:08:21.612226  194801 node_conditions.go:123] node cpu capacity is 8
I0723 12:08:21.612321  194801 node_conditions.go:105] duration metric: took 4.394308ms to run NodePressure ...
I0723 12:08:21.612335  194801 start.go:241] waiting for startup goroutines ...
I0723 12:08:21.662471  194801 kapi.go:214] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0723 12:08:21.662512  194801 start.go:246] waiting for cluster config update ...
I0723 12:08:21.662534  194801 start.go:255] writing updated cluster config ...
I0723 12:08:21.662764  194801 ssh_runner.go:195] Run: rm -f paused
I0723 12:08:22.018780  194801 start.go:607] kubectl: 1.33.3, cluster: 1.33.1 (minor skew: 0)
I0723 12:08:22.030313  194801 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


==> Docker <==
Jul 23 12:07:57 minikube dockerd[683]: time="2025-07-23T12:07:57.453440503Z" level=info msg="Starting up"
Jul 23 12:07:57 minikube dockerd[683]: time="2025-07-23T12:07:57.480285533Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Jul 23 12:07:57 minikube dockerd[683]: time="2025-07-23T12:07:57.491028644Z" level=info msg="Creating a containerd client" address=/run/containerd/containerd.sock timeout=1m0s
Jul 23 12:07:57 minikube dockerd[683]: time="2025-07-23T12:07:57.560803652Z" level=info msg="[graphdriver] using prior storage driver: overlay2"
Jul 23 12:07:57 minikube dockerd[683]: time="2025-07-23T12:07:57.564730017Z" level=info msg="Loading containers: start."
Jul 23 12:08:00 minikube dockerd[683]: time="2025-07-23T12:08:00.671374498Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count 85e18e48515d1902852a396e115ed8c5da581dc804a37a9a1c6c58f568262ed9], retrying...."
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.140039545Z" level=info msg="Loading containers: done."
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.268632462Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.268701655Z" level=info msg="Initializing buildkit"
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.280947282Z" level=info msg="Completed buildkit initialization"
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.285167812Z" level=info msg="Daemon has completed initialization"
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.285256296Z" level=info msg="API listen on /var/run/docker.sock"
Jul 23 12:08:01 minikube dockerd[683]: time="2025-07-23T12:08:01.285279288Z" level=info msg="API listen on [::]:2376"
Jul 23 12:08:01 minikube systemd[1]: Started Docker Application Container Engine.
Jul 23 12:08:02 minikube systemd[1]: Stopping Docker Application Container Engine...
Jul 23 12:08:02 minikube dockerd[683]: time="2025-07-23T12:08:02.650268069Z" level=info msg="Processing signal 'terminated'"
Jul 23 12:08:02 minikube dockerd[683]: time="2025-07-23T12:08:02.651266470Z" level=info msg="stopping event stream following graceful shutdown" error="<nil>" module=libcontainerd namespace=moby
Jul 23 12:08:02 minikube dockerd[683]: time="2025-07-23T12:08:02.651559183Z" level=info msg="Daemon shutdown complete"
Jul 23 12:08:02 minikube systemd[1]: docker.service: Deactivated successfully.
Jul 23 12:08:02 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 23 12:08:03 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 23 12:08:03 minikube systemd[1]: docker.service: Deactivated successfully.
Jul 23 12:08:03 minikube systemd[1]: Stopped Docker Application Container Engine.
Jul 23 12:08:03 minikube systemd[1]: Starting Docker Application Container Engine...
Jul 23 12:08:03 minikube dockerd[1114]: time="2025-07-23T12:08:03.464905469Z" level=info msg="Starting up"
Jul 23 12:08:03 minikube dockerd[1114]: time="2025-07-23T12:08:03.497763680Z" level=info msg="OTEL tracing is not configured, using no-op tracer provider"
Jul 23 12:08:03 minikube dockerd[1114]: time="2025-07-23T12:08:03.508009661Z" level=info msg="Creating a containerd client" address=/run/containerd/containerd.sock timeout=1m0s
Jul 23 12:08:03 minikube dockerd[1114]: time="2025-07-23T12:08:03.626247955Z" level=info msg="[graphdriver] trying configured driver: overlay2"
Jul 23 12:08:03 minikube dockerd[1114]: time="2025-07-23T12:08:03.663096240Z" level=info msg="Loading containers: start."
Jul 23 12:08:06 minikube dockerd[1114]: time="2025-07-23T12:08:06.504189037Z" level=warning msg="Error (Unable to complete atomic operation, key modified) deleting object [endpoint_count 1fffdf71af1b841b38b69209b94ff458fb8bd629a6645d95390fc47fc46f5659], retrying...."
Jul 23 12:08:06 minikube dockerd[1114]: time="2025-07-23T12:08:06.980221434Z" level=info msg="Loading containers: done."
Jul 23 12:08:06 minikube dockerd[1114]: time="2025-07-23T12:08:06.996776351Z" level=info msg="Docker daemon" commit=01f442b containerd-snapshotter=false storage-driver=overlay2 version=28.1.1
Jul 23 12:08:06 minikube dockerd[1114]: time="2025-07-23T12:08:06.996870655Z" level=info msg="Initializing buildkit"
Jul 23 12:08:07 minikube dockerd[1114]: time="2025-07-23T12:08:07.009803375Z" level=info msg="Completed buildkit initialization"
Jul 23 12:08:07 minikube dockerd[1114]: time="2025-07-23T12:08:07.014591632Z" level=info msg="Daemon has completed initialization"
Jul 23 12:08:07 minikube dockerd[1114]: time="2025-07-23T12:08:07.014683480Z" level=info msg="API listen on [::]:2376"
Jul 23 12:08:07 minikube dockerd[1114]: time="2025-07-23T12:08:07.014688133Z" level=info msg="API listen on /var/run/docker.sock"
Jul 23 12:08:07 minikube systemd[1]: Started Docker Application Container Engine.
Jul 23 12:08:07 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Starting cri-dockerd dev (HEAD)"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Start docker client with request timeout 0s"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Hairpin mode is set to hairpin-veth"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Loaded network plugin cni"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Docker cri networking managed by network plugin cni"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Setting cgroupDriver systemd"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Jul 23 12:08:07 minikube cri-dockerd[1419]: time="2025-07-23T12:08:07Z" level=info msg="Start cri-dockerd grpc backend"
Jul 23 12:08:07 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Jul 23 12:08:14 minikube cri-dockerd[1419]: time="2025-07-23T12:08:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/a5ac4d8d2699123bffd430982acf76e43021fa6f4710fed190b59a315e7a2a61/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:14 minikube cri-dockerd[1419]: time="2025-07-23T12:08:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/96e6b2344d1768d79c909b9393d696755e418d58d2c4e4cc846250ad3d365ef9/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:14 minikube cri-dockerd[1419]: time="2025-07-23T12:08:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/89961e5379862dccd25477556e5591a625249e7c865c533b9c8c0c65b5f4481a/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:14 minikube cri-dockerd[1419]: time="2025-07-23T12:08:14Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/5182d2f1b9b7b03879e3aae958bc620840f2a8d16bf870a810c97d731d2dc61c/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:28 minikube cri-dockerd[1419]: time="2025-07-23T12:08:28Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/3c4231ac54a6634eace60ede58fd416fb6cc942def03b5a85b3e8cfa1b8829f1/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:32 minikube cri-dockerd[1419]: time="2025-07-23T12:08:32Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Jul 23 12:08:33 minikube cri-dockerd[1419]: time="2025-07-23T12:08:33Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d9fc9e6b3c815c13238e1df150101ac40a65ced0a84e239bd3a3a652c5a5fff0/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:08:33 minikube cri-dockerd[1419]: time="2025-07-23T12:08:33Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/0e178aa0153886f6c1fad164b8426f9461cfd63e50c263e8f4156b76940c8e70/resolv.conf as [nameserver 192.168.49.1 options ndots:0]"
Jul 23 12:09:03 minikube cri-dockerd[1419]: time="2025-07-23T12:09:03Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/bdc39b33bcdf793d30afa1d2546879c5eaf9b42fd916e5d096a6d266740dbf62/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Jul 23 12:09:13 minikube cri-dockerd[1419]: time="2025-07-23T12:09:13Z" level=info msg="Stop pulling image sah1/lightweight-ai-tic-tac-toe:latest: Status: Downloaded newer image for sah1/lightweight-ai-tic-tac-toe:latest"


==> container status <==
CONTAINER           IMAGE                                                                                                     CREATED             STATE               NAME                      ATTEMPT             POD ID              POD
d247dbc9ceab0       sah1/lightweight-ai-tic-tac-toe@sha256:cca6aaf362154d9c372c27c118526f9c25c6e263adc70695fe6a609e5c31ac44   8 minutes ago       Running             tic-tac-toe               0                   bdc39b33bcdf7       tic-tac-toe-deployment-c9c7bdd-k94k5
d87bd34ca6e3d       1cf5f116067c6                                                                                             9 minutes ago       Running             coredns                   0                   0e178aa015388       coredns-674b8bbfcf-9wcc4
e9ee0c70f3268       6e38f40d628db                                                                                             9 minutes ago       Running             storage-provisioner       0                   d9fc9e6b3c815       storage-provisioner
dee1710371d42       b79c189b052cd                                                                                             9 minutes ago       Running             kube-proxy                0                   3c4231ac54a66       kube-proxy-wm7sm
1aa2736796770       c6ab243b29f82                                                                                             9 minutes ago       Running             kube-apiserver            0                   5182d2f1b9b7b       kube-apiserver-minikube
11e490afb387b       398c985c0d950                                                                                             9 minutes ago       Running             kube-scheduler            0                   89961e5379862       kube-scheduler-minikube
aa9fec245f544       ef43894fa110c                                                                                             9 minutes ago       Running             kube-controller-manager   0                   96e6b2344d176       kube-controller-manager-minikube
6c5d83a93de94       499038711c081                                                                                             9 minutes ago       Running             etcd                      0                   a5ac4d8d26991       etcd-minikube


==> coredns [d87bd34ca6e3] <==
maxprocs: Leaving GOMAXPROCS=8: CPU quota undefined
.:53
[INFO] plugin/reload: Running configuration SHA512 = 9e2996f8cb67ac53e0259ab1f8d615d07d1beb0bd07e6a1e39769c3bf486a905bb991cc47f8d2f14d0d3a90a87dfc625a0b4c524fed169d8158c40657c0694b1
CoreDNS-1.12.0
linux/amd64, go1.23.3, 51e11f1
[INFO] 127.0.0.1:36673 - 6779 "HINFO IN 5864413412322493153.8641311381653475130. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.033503716s


==> describe nodes <==
Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=f8f52f5de11fc6ad8244afac475e1d0f96841df1-dirty
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2025_07_23T12_08_20_0700
                    minikube.k8s.io/version=v1.36.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Wed, 23 Jul 2025 12:08:16 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Wed, 23 Jul 2025 12:18:00 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Wed, 23 Jul 2025 12:14:54 +0000   Wed, 23 Jul 2025 12:08:15 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Wed, 23 Jul 2025 12:14:54 +0000   Wed, 23 Jul 2025 12:08:15 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Wed, 23 Jul 2025 12:14:54 +0000   Wed, 23 Jul 2025 12:08:15 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Wed, 23 Jul 2025 12:14:54 +0000   Wed, 23 Jul 2025 12:08:32 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7971036Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7971036Ki
  pods:               110
System Info:
  Machine ID:                 c6fe31a4865044788596f2c69179efe0
  System UUID:                c6fe31a4865044788596f2c69179efe0
  Boot ID:                    bca77937-5348-420c-8f10-a88db5e13ef8
  Kernel Version:             6.6.87.2-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.5 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://28.1.1
  Kubelet Version:            v1.33.1
  Kube-Proxy Version:         
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                    CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                    ------------  ----------  ---------------  -------------  ---
  default                     tic-tac-toe-deployment-c9c7bdd-k94k5    0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m3s
  kube-system                 coredns-674b8bbfcf-9wcc4                100m (1%)     0 (0%)      70Mi (0%)        170Mi (2%)     9m38s
  kube-system                 etcd-minikube                           100m (1%)     0 (0%)      100Mi (1%)       0 (0%)         9m46s
  kube-system                 kube-apiserver-minikube                 250m (3%)     0 (0%)      0 (0%)           0 (0%)         9m46s
  kube-system                 kube-controller-manager-minikube        200m (2%)     0 (0%)      0 (0%)           0 (0%)         9m46s
  kube-system                 kube-proxy-wm7sm                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m38s
  kube-system                 kube-scheduler-minikube                 100m (1%)     0 (0%)      0 (0%)           0 (0%)         9m47s
  kube-system                 storage-provisioner                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m44s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%)   0 (0%)
  memory             170Mi (2%)  170Mi (2%)
  ephemeral-storage  0 (0%)      0 (0%)
  hugepages-1Gi      0 (0%)      0 (0%)
  hugepages-2Mi      0 (0%)      0 (0%)
Events:
  Type    Reason                   Age    From             Message
  ----    ------                   ----   ----             -------
  Normal  Starting                 9m35s  kube-proxy       
  Normal  Starting                 9m46s  kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  9m46s  kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  9m46s  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    9m46s  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     9m46s  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             9m46s  kubelet          Node minikube status is now: NodeNotReady
  Normal  RegisteredNode           9m39s  node-controller  Node minikube event: Registered Node minikube in Controller
  Normal  NodeReady                9m33s  kubelet          Node minikube status is now: NodeReady


==> dmesg <==
[  +0.018480] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:06] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.027707] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:15] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.017584] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +10.352583] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.017319] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:16] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.028916] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:20] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.040604] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:21] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.026786] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +7.635886] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.101517] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:28] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.028573] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +18.936143] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.020192] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +13.480116] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.023056] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +12.978440] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.056170] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:33] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.022581] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +12.609907] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.015535] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +27.762604] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.021781] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:34] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.031188] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +15.796416] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.023425] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +15.755677] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.038378] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:35] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.030853] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:36] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.020543] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +19.655219] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.019981] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +14.927618] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.019570] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:37] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.080225] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +7.872489] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.015835] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +24.371835] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.017269] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +14.532907] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.019495] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:42] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.031585] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[Jul23 12:43] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.023394] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +5.306688] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.014231] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +13.708742] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[  +0.023276] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5
[ +17.804131] WSL (215) ERROR: CheckConnection: getaddrinfo() failed: -5


==> etcd [6c5d83a93de9] <==
{"level":"warn","ts":"2025-07-23T12:10:28.795336Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"459.727676ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/volumeattachments/\" range_end:\"/registry/volumeattachments0\" count_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:10:28.795350Z","caller":"traceutil/trace.go:171","msg":"trace[552880761] range","detail":"{range_begin:/registry/volumeattachments/; range_end:/registry/volumeattachments0; response_count:0; response_revision:505; }","duration":"459.785233ms","start":"2025-07-23T12:10:28.335561Z","end":"2025-07-23T12:10:28.795346Z","steps":["trace[552880761] 'agreement among raft nodes before linearized reading'  (duration: 459.743928ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:10:28.795361Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:10:28.335542Z","time spent":"459.816501ms","remote":"127.0.0.1:49190","response type":"/etcdserverpb.KV/Range","request count":0,"request size":62,"response count":0,"response size":29,"request content":"key:\"/registry/volumeattachments/\" range_end:\"/registry/volumeattachments0\" count_only:true "}
{"level":"warn","ts":"2025-07-23T12:10:28.795374Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"325.628749ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:10:28.795401Z","caller":"traceutil/trace.go:171","msg":"trace[32902438] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:505; }","duration":"325.657614ms","start":"2025-07-23T12:10:28.469737Z","end":"2025-07-23T12:10:28.795394Z","steps":["trace[32902438] 'agreement among raft nodes before linearized reading'  (duration: 325.617514ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:32.083518Z","caller":"traceutil/trace.go:171","msg":"trace[1435227772] transaction","detail":"{read_only:false; response_revision:509; number_of_response:1; }","duration":"187.992647ms","start":"2025-07-23T12:10:31.895511Z","end":"2025-07-23T12:10:32.083503Z","steps":["trace[1435227772] 'process raft request'  (duration: 187.852283ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:34.258919Z","caller":"traceutil/trace.go:171","msg":"trace[1810186574] transaction","detail":"{read_only:false; response_revision:511; number_of_response:1; }","duration":"169.234365ms","start":"2025-07-23T12:10:34.089667Z","end":"2025-07-23T12:10:34.258902Z","steps":["trace[1810186574] 'process raft request'  (duration: 169.115223ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:36.524147Z","caller":"traceutil/trace.go:171","msg":"trace[1463710718] transaction","detail":"{read_only:false; response_revision:512; number_of_response:1; }","duration":"257.058004ms","start":"2025-07-23T12:10:36.267059Z","end":"2025-07-23T12:10:36.524117Z","steps":["trace[1463710718] 'process raft request'  (duration: 256.737921ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:42.427671Z","caller":"traceutil/trace.go:171","msg":"trace[1916447118] transaction","detail":"{read_only:false; response_revision:517; number_of_response:1; }","duration":"114.067308ms","start":"2025-07-23T12:10:42.313587Z","end":"2025-07-23T12:10:42.427655Z","steps":["trace[1916447118] 'process raft request'  (duration: 113.929513ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:10:44.819531Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"105.586797ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:10:44.819611Z","caller":"traceutil/trace.go:171","msg":"trace[1224174914] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:517; }","duration":"105.673522ms","start":"2025-07-23T12:10:42.469309Z","end":"2025-07-23T12:10:44.819599Z","steps":["trace[1224174914] 'range keys from in-memory index tree'  (duration: 105.561934ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:49.236484Z","caller":"traceutil/trace.go:171","msg":"trace[995957192] transaction","detail":"{read_only:false; response_revision:520; number_of_response:1; }","duration":"212.106129ms","start":"2025-07-23T12:10:49.024361Z","end":"2025-07-23T12:10:49.236467Z","steps":["trace[995957192] 'process raft request'  (duration: 211.973945ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:10:51.849306Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"135.272312ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:10:51.849471Z","caller":"traceutil/trace.go:171","msg":"trace[1464799585] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:522; }","duration":"135.445798ms","start":"2025-07-23T12:10:51.713998Z","end":"2025-07-23T12:10:51.849443Z","steps":["trace[1464799585] 'range keys from in-memory index tree'  (duration: 135.125576ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:10:59.764899Z","caller":"traceutil/trace.go:171","msg":"trace[1773481566] transaction","detail":"{read_only:false; response_revision:528; number_of_response:1; }","duration":"289.798096ms","start":"2025-07-23T12:10:59.475090Z","end":"2025-07-23T12:10:59.764888Z","steps":["trace[1773481566] 'process raft request'  (duration: 289.608005ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:11:03.556844Z","caller":"traceutil/trace.go:171","msg":"trace[239691863] transaction","detail":"{read_only:false; response_revision:531; number_of_response:1; }","duration":"142.764569ms","start":"2025-07-23T12:11:03.414067Z","end":"2025-07-23T12:11:03.556832Z","steps":["trace[239691863] 'process raft request'  (duration: 142.698604ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:11:04.168509Z","caller":"traceutil/trace.go:171","msg":"trace[1359516048] transaction","detail":"{read_only:false; response_revision:532; number_of_response:1; }","duration":"383.373204ms","start":"2025-07-23T12:11:03.785122Z","end":"2025-07-23T12:11:04.168495Z","steps":["trace[1359516048] 'process raft request'  (duration: 383.264843ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:11:04.168630Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:11:03.785112Z","time spent":"383.460137ms","remote":"127.0.0.1:48964","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":585,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" mod_revision:530 > success:<request_put:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" value_size:512 >> failure:<request_range:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" > >"}
{"level":"info","ts":"2025-07-23T12:11:05.613983Z","caller":"traceutil/trace.go:171","msg":"trace[750984704] linearizableReadLoop","detail":"{readStateIndex:573; appliedIndex:572; }","duration":"358.334178ms","start":"2025-07-23T12:11:05.255633Z","end":"2025-07-23T12:11:05.613967Z","steps":["trace[750984704] 'read index received'  (duration: 358.118715ms)","trace[750984704] 'applied index is now lower than readState.Index'  (duration: 214.967µs)"],"step_count":2}
{"level":"warn","ts":"2025-07-23T12:11:05.614097Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"358.466778ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:11:05.614135Z","caller":"traceutil/trace.go:171","msg":"trace[185012553] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:533; }","duration":"358.543767ms","start":"2025-07-23T12:11:05.255583Z","end":"2025-07-23T12:11:05.614127Z","steps":["trace[185012553] 'agreement among raft nodes before linearized reading'  (duration: 358.452479ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:11:05.614169Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:11:05.255573Z","time spent":"358.583747ms","remote":"127.0.0.1:48774","response type":"/etcdserverpb.KV/Range","request count":0,"request size":18,"response count":0,"response size":29,"request content":"key:\"/registry/health\" "}
{"level":"info","ts":"2025-07-23T12:11:05.614159Z","caller":"traceutil/trace.go:171","msg":"trace[1354881032] transaction","detail":"{read_only:false; response_revision:533; number_of_response:1; }","duration":"469.384624ms","start":"2025-07-23T12:11:05.144752Z","end":"2025-07-23T12:11:05.614136Z","steps":["trace[1354881032] 'process raft request'  (duration: 469.054855ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:11:05.614287Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:11:05.144732Z","time spent":"469.483323ms","remote":"127.0.0.1:49060","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":520,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/leases/kube-node-lease/minikube\" mod_revision:525 > success:<request_put:<key:\"/registry/leases/kube-node-lease/minikube\" value_size:471 >> failure:<request_range:<key:\"/registry/leases/kube-node-lease/minikube\" > >"}
{"level":"warn","ts":"2025-07-23T12:15:44.061599Z","caller":"etcdserver/v3_server.go:920","msg":"waiting for ReadIndex response took too long, retrying","sent-request-id":8128038790278861080,"retry-timeout":"500ms"}
{"level":"info","ts":"2025-07-23T12:15:44.186358Z","caller":"traceutil/trace.go:171","msg":"trace[1525437653] transaction","detail":"{read_only:false; response_revision:741; number_of_response:1; }","duration":"749.254561ms","start":"2025-07-23T12:15:43.437090Z","end":"2025-07-23T12:15:44.186345Z","steps":["trace[1525437653] 'process raft request'  (duration: 749.133656ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:15:44.186463Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:15:43.437077Z","time spent":"749.330191ms","remote":"127.0.0.1:48964","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":585,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" mod_revision:740 > success:<request_put:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" value_size:512 >> failure:<request_range:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" > >"}
{"level":"info","ts":"2025-07-23T12:15:44.203596Z","caller":"traceutil/trace.go:171","msg":"trace[2107040720] linearizableReadLoop","detail":"{readStateIndex:834; appliedIndex:832; }","duration":"642.837302ms","start":"2025-07-23T12:15:43.560743Z","end":"2025-07-23T12:15:44.203581Z","steps":["trace[2107040720] 'read index received'  (duration: 625.53697ms)","trace[2107040720] 'applied index is now lower than readState.Index'  (duration: 17.299707ms)"],"step_count":2}
{"level":"warn","ts":"2025-07-23T12:15:44.203674Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"642.923515ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"warn","ts":"2025-07-23T12:15:44.203687Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"102.245227ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:15:44.203699Z","caller":"traceutil/trace.go:171","msg":"trace[1964195432] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:741; }","duration":"102.286114ms","start":"2025-07-23T12:15:44.101409Z","end":"2025-07-23T12:15:44.203695Z","steps":["trace[1964195432] 'agreement among raft nodes before linearized reading'  (duration: 102.257262ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:15:44.203698Z","caller":"traceutil/trace.go:171","msg":"trace[838403101] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:741; }","duration":"642.957724ms","start":"2025-07-23T12:15:43.560733Z","end":"2025-07-23T12:15:44.203691Z","steps":["trace[838403101] 'agreement among raft nodes before linearized reading'  (duration: 642.907583ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:30.322891Z","caller":"traceutil/trace.go:171","msg":"trace[153916045] transaction","detail":"{read_only:false; response_revision:820; number_of_response:1; }","duration":"166.439608ms","start":"2025-07-23T12:17:30.156439Z","end":"2025-07-23T12:17:30.322878Z","steps":["trace[153916045] 'process raft request'  (duration: 166.336689ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:34.670373Z","caller":"traceutil/trace.go:171","msg":"trace[38199628] transaction","detail":"{read_only:false; response_revision:822; number_of_response:1; }","duration":"239.592371ms","start":"2025-07-23T12:17:34.430760Z","end":"2025-07-23T12:17:34.670352Z","steps":["trace[38199628] 'process raft request'  (duration: 239.461224ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:36.052567Z","caller":"traceutil/trace.go:171","msg":"trace[1421385810] linearizableReadLoop","detail":"{readStateIndex:936; appliedIndex:935; }","duration":"110.219896ms","start":"2025-07-23T12:17:35.942330Z","end":"2025-07-23T12:17:36.052550Z","steps":["trace[1421385810] 'read index received'  (duration: 110.091263ms)","trace[1421385810] 'applied index is now lower than readState.Index'  (duration: 127.749µs)"],"step_count":2}
{"level":"warn","ts":"2025-07-23T12:17:36.052670Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"110.326567ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:17:36.052721Z","caller":"traceutil/trace.go:171","msg":"trace[1580760590] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:822; }","duration":"110.36017ms","start":"2025-07-23T12:17:35.942325Z","end":"2025-07-23T12:17:36.052686Z","steps":["trace[1580760590] 'agreement among raft nodes before linearized reading'  (duration: 110.313278ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:36.601865Z","caller":"traceutil/trace.go:171","msg":"trace[1976597164] transaction","detail":"{read_only:false; response_revision:824; number_of_response:1; }","duration":"266.327972ms","start":"2025-07-23T12:17:36.335518Z","end":"2025-07-23T12:17:36.601846Z","steps":["trace[1976597164] 'process raft request'  (duration: 266.219923ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:17:39.614574Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"208.832128ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:17:39.614673Z","caller":"traceutil/trace.go:171","msg":"trace[1886833660] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:825; }","duration":"208.948031ms","start":"2025-07-23T12:17:36.941981Z","end":"2025-07-23T12:17:39.614656Z","steps":["trace[1886833660] 'range keys from in-memory index tree'  (duration: 208.780942ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:17:40.650611Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"245.027028ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:17:40.650702Z","caller":"traceutil/trace.go:171","msg":"trace[2095181177] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:826; }","duration":"245.122072ms","start":"2025-07-23T12:17:40.405566Z","end":"2025-07-23T12:17:40.650688Z","steps":["trace[2095181177] 'range keys from in-memory index tree'  (duration: 245.003336ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:17:40.650611Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"152.595905ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/apiregistration.k8s.io/apiservices/\" range_end:\"/registry/apiregistration.k8s.io/apiservices0\" count_only:true ","response":"range_response_count:0 size:7"}
{"level":"info","ts":"2025-07-23T12:17:40.650781Z","caller":"traceutil/trace.go:171","msg":"trace[307512032] range","detail":"{range_begin:/registry/apiregistration.k8s.io/apiservices/; range_end:/registry/apiregistration.k8s.io/apiservices0; response_count:0; response_revision:826; }","duration":"152.78791ms","start":"2025-07-23T12:17:40.497979Z","end":"2025-07-23T12:17:40.650767Z","steps":["trace[307512032] 'count revisions from in-memory index tree'  (duration: 152.518154ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:43.468712Z","caller":"traceutil/trace.go:171","msg":"trace[222489536] transaction","detail":"{read_only:false; response_revision:828; number_of_response:1; }","duration":"249.435291ms","start":"2025-07-23T12:17:43.219248Z","end":"2025-07-23T12:17:43.468684Z","steps":["trace[222489536] 'process raft request'  (duration: 249.277799ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:45.711979Z","caller":"traceutil/trace.go:171","msg":"trace[783286031] linearizableReadLoop","detail":"{readStateIndex:944; appliedIndex:943; }","duration":"233.441157ms","start":"2025-07-23T12:17:45.478520Z","end":"2025-07-23T12:17:45.711961Z","steps":["trace[783286031] 'read index received'  (duration: 233.253526ms)","trace[783286031] 'applied index is now lower than readState.Index'  (duration: 187.238µs)"],"step_count":2}
{"level":"warn","ts":"2025-07-23T12:17:45.712093Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"233.55367ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/mutatingwebhookconfigurations/\" range_end:\"/registry/mutatingwebhookconfigurations0\" count_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:17:45.712116Z","caller":"traceutil/trace.go:171","msg":"trace[285474719] range","detail":"{range_begin:/registry/mutatingwebhookconfigurations/; range_end:/registry/mutatingwebhookconfigurations0; response_count:0; response_revision:829; }","duration":"233.606445ms","start":"2025-07-23T12:17:45.478503Z","end":"2025-07-23T12:17:45.712109Z","steps":["trace[285474719] 'agreement among raft nodes before linearized reading'  (duration: 233.551891ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:45.712126Z","caller":"traceutil/trace.go:171","msg":"trace[65877434] transaction","detail":"{read_only:false; response_revision:829; number_of_response:1; }","duration":"237.126521ms","start":"2025-07-23T12:17:45.474983Z","end":"2025-07-23T12:17:45.712110Z","steps":["trace[65877434] 'process raft request'  (duration: 236.826202ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:52.090127Z","caller":"traceutil/trace.go:171","msg":"trace[1940956204] linearizableReadLoop","detail":"{readStateIndex:951; appliedIndex:950; }","duration":"143.1515ms","start":"2025-07-23T12:17:51.946966Z","end":"2025-07-23T12:17:52.090117Z","steps":["trace[1940956204] 'read index received'  (duration: 143.009617ms)","trace[1940956204] 'applied index is now lower than readState.Index'  (duration: 141.654µs)"],"step_count":2}
{"level":"info","ts":"2025-07-23T12:17:52.090212Z","caller":"traceutil/trace.go:171","msg":"trace[1022143879] transaction","detail":"{read_only:false; response_revision:835; number_of_response:1; }","duration":"283.612433ms","start":"2025-07-23T12:17:51.806591Z","end":"2025-07-23T12:17:52.090203Z","steps":["trace[1022143879] 'process raft request'  (duration: 283.425151ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:17:52.090214Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"143.235006ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/health\" ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:17:52.090236Z","caller":"traceutil/trace.go:171","msg":"trace[72843592] range","detail":"{range_begin:/registry/health; range_end:; response_count:0; response_revision:835; }","duration":"143.300237ms","start":"2025-07-23T12:17:51.946932Z","end":"2025-07-23T12:17:52.090232Z","steps":["trace[72843592] 'agreement among raft nodes before linearized reading'  (duration: 143.227484ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:17:56.468681Z","caller":"traceutil/trace.go:171","msg":"trace[1714633469] transaction","detail":"{read_only:false; response_revision:837; number_of_response:1; }","duration":"300.212965ms","start":"2025-07-23T12:17:56.168456Z","end":"2025-07-23T12:17:56.468669Z","steps":["trace[1714633469] 'process raft request'  (duration: 300.123868ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:17:56.468803Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:17:56.168446Z","time spent":"300.296265ms","remote":"127.0.0.1:48964","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":585,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" mod_revision:836 > success:<request_put:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" value_size:512 >> failure:<request_range:<key:\"/registry/services/endpoints/kube-system/k8s.io-minikube-hostpath\" > >"}
{"level":"info","ts":"2025-07-23T12:17:59.431347Z","caller":"traceutil/trace.go:171","msg":"trace[466037287] transaction","detail":"{read_only:false; response_revision:840; number_of_response:1; }","duration":"103.762169ms","start":"2025-07-23T12:17:59.327570Z","end":"2025-07-23T12:17:59.431333Z","steps":["trace[466037287] 'process raft request'  (duration: 103.581074ms)"],"step_count":1}
{"level":"info","ts":"2025-07-23T12:18:01.251999Z","caller":"traceutil/trace.go:171","msg":"trace[225530232] transaction","detail":"{read_only:false; response_revision:842; number_of_response:1; }","duration":"407.362874ms","start":"2025-07-23T12:18:00.844621Z","end":"2025-07-23T12:18:01.251984Z","steps":["trace[225530232] 'process raft request'  (duration: 407.265896ms)"],"step_count":1}
{"level":"warn","ts":"2025-07-23T12:18:01.252113Z","caller":"v3rpc/interceptor.go:197","msg":"request stats","start time":"2025-07-23T12:18:00.844606Z","time spent":"407.462419ms","remote":"127.0.0.1:49060","response type":"/etcdserverpb.KV/Txn","request count":1,"request size":521,"response count":0,"response size":40,"request content":"compare:<target:MOD key:\"/registry/leases/kube-node-lease/minikube\" mod_revision:834 > success:<request_put:<key:\"/registry/leases/kube-node-lease/minikube\" value_size:472 >> failure:<request_range:<key:\"/registry/leases/kube-node-lease/minikube\" > >"}
{"level":"warn","ts":"2025-07-23T12:18:01.719021Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"313.11723ms","expected-duration":"100ms","prefix":"read-only range ","request":"limit:1 serializable:true keys_only:true ","response":"range_response_count:0 size:5"}
{"level":"info","ts":"2025-07-23T12:18:01.719139Z","caller":"traceutil/trace.go:171","msg":"trace[1527120052] range","detail":"{range_begin:; range_end:; response_count:0; response_revision:842; }","duration":"313.248574ms","start":"2025-07-23T12:18:01.405871Z","end":"2025-07-23T12:18:01.719119Z","steps":["trace[1527120052] 'range keys from in-memory index tree'  (duration: 313.084274ms)"],"step_count":1}


==> kernel <==
 12:18:05 up  7:10,  0 users,  load average: 0.21, 0.22, 0.25
Linux minikube 6.6.87.2-microsoft-standard-WSL2 #1 SMP PREEMPT_DYNAMIC Thu Jun  5 18:30:46 UTC 2025 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.5 LTS"


==> kube-apiserver [1aa273679677] <==
I0723 12:08:16.702863       1 apiapproval_controller.go:189] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0723 12:08:16.702878       1 crd_finalizer.go:269] Starting CRDFinalizer
I0723 12:08:16.705761       1 local_available_controller.go:156] Starting LocalAvailability controller
I0723 12:08:16.705778       1 cache.go:32] Waiting for caches to sync for LocalAvailability controller
I0723 12:08:16.705936       1 repairip.go:200] Starting ipallocator-repair-controller
I0723 12:08:16.705945       1 shared_informer.go:350] "Waiting for caches to sync" controller="ipallocator-repair-controller"
I0723 12:08:16.707677       1 default_servicecidr_controller.go:110] Starting kubernetes-service-cidr-controller
I0723 12:08:16.707697       1 shared_informer.go:350] "Waiting for caches to sync" controller="kubernetes-service-cidr-controller"
I0723 12:08:16.708754       1 cluster_authentication_trust_controller.go:459] Starting cluster_authentication_trust_controller controller
I0723 12:08:16.708833       1 shared_informer.go:350] "Waiting for caches to sync" controller="cluster_authentication_trust_controller"
I0723 12:08:16.708893       1 system_namespaces_controller.go:66] Starting system namespaces controller
I0723 12:08:16.708949       1 crdregistration_controller.go:114] Starting crd-autoregister controller
I0723 12:08:16.708969       1 shared_informer.go:350] "Waiting for caches to sync" controller="crd-autoregister"
I0723 12:08:16.708998       1 shared_informer.go:357] "Caches are synced" controller="crd-autoregister"
I0723 12:08:16.710263       1 dynamic_cafile_content.go:161] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0723 12:08:16.710423       1 aggregator.go:171] initial CRD sync complete...
I0723 12:08:16.710467       1 autoregister_controller.go:144] Starting autoregister controller
I0723 12:08:16.710484       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0723 12:08:16.710503       1 cache.go:39] Caches are synced for autoregister controller
I0723 12:08:16.710286       1 dynamic_cafile_content.go:161] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0723 12:08:16.715797       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0723 12:08:16.733434       1 shared_informer.go:357] "Caches are synced" controller="node_authorizer"
I0723 12:08:16.738656       1 shared_informer.go:357] "Caches are synced" controller="*generic.policySource[*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicy,*k8s.io/api/admissionregistration/v1.ValidatingAdmissionPolicyBinding,k8s.io/apiserver/pkg/admission/plugin/policy/validating.Validator]"
I0723 12:08:16.738685       1 policy_source.go:240] refreshing policies
I0723 12:08:16.795015       1 apf_controller.go:382] Running API Priority and Fairness config worker
I0723 12:08:16.795108       1 apf_controller.go:385] Running API Priority and Fairness periodic rebalancing process
I0723 12:08:16.795232       1 shared_informer.go:357] "Caches are synced" controller="configmaps"
I0723 12:08:16.795335       1 cache.go:39] Caches are synced for RemoteAvailability controller
I0723 12:08:16.795760       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0723 12:08:16.796056       1 handler_discovery.go:451] Starting ResourceDiscoveryManager
I0723 12:08:16.806582       1 shared_informer.go:357] "Caches are synced" controller="ipallocator-repair-controller"
I0723 12:08:16.806751       1 cache.go:39] Caches are synced for LocalAvailability controller
I0723 12:08:16.808086       1 shared_informer.go:357] "Caches are synced" controller="kubernetes-service-cidr-controller"
I0723 12:08:16.808162       1 default_servicecidr_controller.go:165] Creating default ServiceCIDR with CIDRs: [10.96.0.0/12]
I0723 12:08:16.809294       1 shared_informer.go:357] "Caches are synced" controller="cluster_authentication_trust_controller"
I0723 12:08:16.810894       1 controller.go:667] quota admission added evaluator for: namespaces
I0723 12:08:16.904672       1 cidrallocator.go:301] created ClusterIP allocator for Service CIDR 10.96.0.0/12
I0723 12:08:16.904672       1 default_servicecidr_controller.go:214] Setting default ServiceCIDR condition Ready to True
I0723 12:08:16.905253       1 controller.go:667] quota admission added evaluator for: leases.coordination.k8s.io
I0723 12:08:16.923465       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0723 12:08:16.923583       1 default_servicecidr_controller.go:136] Shutting down kubernetes-service-cidr-controller
I0723 12:08:17.788866       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0723 12:08:17.794632       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0723 12:08:17.794665       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0723 12:08:18.779275       1 controller.go:667] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0723 12:08:18.835343       1 controller.go:667] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0723 12:08:19.054397       1 alloc.go:328] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0723 12:08:19.074190       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0723 12:08:19.075065       1 controller.go:667] quota admission added evaluator for: endpoints
I0723 12:08:19.086526       1 controller.go:667] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0723 12:08:19.728883       1 controller.go:667] quota admission added evaluator for: serviceaccounts
I0723 12:08:19.734730       1 controller.go:667] quota admission added evaluator for: deployments.apps
I0723 12:08:19.763143       1 alloc.go:328] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0723 12:08:19.943432       1 controller.go:667] quota admission added evaluator for: daemonsets.apps
I0723 12:08:27.120150       1 controller.go:667] quota admission added evaluator for: controllerrevisions.apps
I0723 12:08:27.335827       1 controller.go:667] quota admission added evaluator for: replicasets.apps
I0723 12:08:27.354631       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0723 12:08:27.370966       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0723 12:09:27.871246       1 cidrallocator.go:277] updated ClusterIP allocator for Service CIDR 10.96.0.0/12
I0723 12:09:27.873216       1 alloc.go:328] "allocated clusterIPs" service="default/tic-tac-toe-service" clusterIPs={"IPv4":"10.108.129.96"}


==> kube-controller-manager [aa9fec245f54] <==
I0723 12:08:24.165481       1 shared_informer.go:350] "Waiting for caches to sync" controller="certificate-csrapproving"
I0723 12:08:26.624402       1 controllermanager.go:778] "Started controller" controller="token-cleaner-controller"
I0723 12:08:26.624593       1 tokencleaner.go:117] "Starting token cleaner controller" logger="token-cleaner-controller"
I0723 12:08:26.624622       1 shared_informer.go:350] "Waiting for caches to sync" controller="token_cleaner"
I0723 12:08:26.624628       1 shared_informer.go:357] "Caches are synced" controller="token_cleaner"
I0723 12:08:26.628299       1 shared_informer.go:350] "Waiting for caches to sync" controller="resource quota"
I0723 12:08:26.631639       1 actual_state_of_world.go:541] "Failed to update statusUpdateNeeded field in actual state of world" logger="persistentvolume-attach-detach-controller" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"minikube\" does not exist"
I0723 12:08:26.632895       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice"
I0723 12:08:26.635273       1 shared_informer.go:350] "Waiting for caches to sync" controller="garbage collector"
I0723 12:08:26.645773       1 shared_informer.go:357] "Caches are synced" controller="validatingadmissionpolicy-status"
I0723 12:08:26.645941       1 shared_informer.go:357] "Caches are synced" controller="daemon sets"
I0723 12:08:26.650715       1 shared_informer.go:357] "Caches are synced" controller="ClusterRoleAggregator"
I0723 12:08:26.651025       1 shared_informer.go:357] "Caches are synced" controller="stateful set"
I0723 12:08:26.656455       1 shared_informer.go:357] "Caches are synced" controller="TTL after finished"
I0723 12:08:26.660145       1 shared_informer.go:357] "Caches are synced" controller="deployment"
I0723 12:08:26.660183       1 shared_informer.go:357] "Caches are synced" controller="service-cidr-controller"
I0723 12:08:26.664770       1 shared_informer.go:357] "Caches are synced" controller="ReplicationController"
I0723 12:08:26.665000       1 shared_informer.go:357] "Caches are synced" controller="node"
I0723 12:08:26.665074       1 range_allocator.go:177] "Sending events to api server" logger="node-ipam-controller"
I0723 12:08:26.665123       1 range_allocator.go:183] "Starting range CIDR allocator" logger="node-ipam-controller"
I0723 12:08:26.665145       1 shared_informer.go:350] "Waiting for caches to sync" controller="cidrallocator"
I0723 12:08:26.665150       1 shared_informer.go:357] "Caches are synced" controller="cidrallocator"
I0723 12:08:26.670619       1 shared_informer.go:357] "Caches are synced" controller="taint"
I0723 12:08:26.670742       1 node_lifecycle_controller.go:1221] "Initializing eviction metric for zone" logger="node-lifecycle-controller" zone=""
I0723 12:08:26.670841       1 node_lifecycle_controller.go:873] "Missing timestamp for Node. Assuming now as a timestamp" logger="node-lifecycle-controller" node="minikube"
I0723 12:08:26.670906       1 node_lifecycle_controller.go:1025] "Controller detected that all Nodes are not-Ready. Entering master disruption mode" logger="node-lifecycle-controller"
I0723 12:08:26.674590       1 shared_informer.go:357] "Caches are synced" controller="PV protection"
I0723 12:08:26.681880       1 shared_informer.go:357] "Caches are synced" controller="GC"
I0723 12:08:26.690945       1 shared_informer.go:357] "Caches are synced" controller="service account"
I0723 12:08:26.699862       1 shared_informer.go:357] "Caches are synced" controller="job"
I0723 12:08:26.706804       1 shared_informer.go:357] "Caches are synced" controller="expand"
I0723 12:08:26.708514       1 shared_informer.go:357] "Caches are synced" controller="disruption"
I0723 12:08:26.708678       1 shared_informer.go:357] "Caches are synced" controller="taint-eviction-controller"
I0723 12:08:26.710207       1 shared_informer.go:357] "Caches are synced" controller="TTL"
I0723 12:08:26.710428       1 shared_informer.go:357] "Caches are synced" controller="cronjob"
I0723 12:08:26.717028       1 shared_informer.go:357] "Caches are synced" controller="persistent volume"
I0723 12:08:26.721099       1 shared_informer.go:357] "Caches are synced" controller="namespace"
I0723 12:08:26.721206       1 shared_informer.go:357] "Caches are synced" controller="ReplicaSet"
I0723 12:08:26.721245       1 shared_informer.go:357] "Caches are synced" controller="legacy-service-account-token-cleaner"
I0723 12:08:26.722561       1 shared_informer.go:357] "Caches are synced" controller="PVC protection"
I0723 12:08:26.730333       1 shared_informer.go:357] "Caches are synced" controller="ephemeral"
I0723 12:08:26.784478       1 range_allocator.go:428] "Set node PodCIDR" logger="node-ipam-controller" node="minikube" podCIDRs=["10.244.0.0/24"]
I0723 12:08:26.817115       1 shared_informer.go:357] "Caches are synced" controller="HPA"
I0723 12:08:26.867763       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-serving"
I0723 12:08:26.867808       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kube-apiserver-client"
I0723 12:08:26.867893       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-kubelet-client"
I0723 12:08:26.867908       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrsigning-legacy-unknown"
I0723 12:08:26.870278       1 shared_informer.go:357] "Caches are synced" controller="certificate-csrapproving"
I0723 12:08:26.886945       1 shared_informer.go:357] "Caches are synced" controller="crt configmap"
I0723 12:08:26.905558       1 shared_informer.go:357] "Caches are synced" controller="bootstrap_signer"
I0723 12:08:26.926380       1 shared_informer.go:357] "Caches are synced" controller="endpoint"
I0723 12:08:26.938285       1 shared_informer.go:357] "Caches are synced" controller="endpoint_slice_mirroring"
I0723 12:08:27.020733       1 shared_informer.go:357] "Caches are synced" controller="attach detach"
I0723 12:08:27.029267       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0723 12:08:27.072333       1 shared_informer.go:357] "Caches are synced" controller="resource quota"
I0723 12:08:27.436368       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0723 12:08:27.468598       1 shared_informer.go:357] "Caches are synced" controller="garbage collector"
I0723 12:08:27.468646       1 garbagecollector.go:154] "Garbage collector: all resource monitors have synced" logger="garbage-collector-controller"
I0723 12:08:27.468656       1 garbagecollector.go:157] "Proceeding to collect garbage" logger="garbage-collector-controller"
I0723 12:08:37.152586       1 node_lifecycle_controller.go:1044] "Controller detected that some Nodes are Ready. Exiting master disruption mode" logger="node-lifecycle-controller"


==> kube-proxy [dee1710371d4] <==
I0723 12:08:29.254106       1 server_linux.go:63] "Using iptables proxy"
I0723 12:08:29.382698       1 server.go:715] "Successfully retrieved node IP(s)" IPs=["192.168.49.2"]
E0723 12:08:29.382778       1 server.go:245] "Kube-proxy configuration may be incomplete or incorrect" err="nodePortAddresses is unset; NodePort connections will be accepted on all local IPs. Consider using `--nodeport-addresses primary`"
I0723 12:08:29.443476       1 server.go:254] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0723 12:08:29.443552       1 server_linux.go:145] "Using iptables Proxier"
I0723 12:08:29.493928       1 proxier.go:243] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses" ipFamily="IPv4"
I0723 12:08:29.513599       1 server.go:516] "Version info" version="v1.33.1"
I0723 12:08:29.513638       1 server.go:518] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0723 12:08:29.564916       1 config.go:329] "Starting node config controller"
I0723 12:08:29.564953       1 config.go:105] "Starting endpoint slice config controller"
I0723 12:08:29.564966       1 shared_informer.go:350] "Waiting for caches to sync" controller="endpoint slice config"
I0723 12:08:29.564960       1 shared_informer.go:350] "Waiting for caches to sync" controller="node config"
I0723 12:08:29.565038       1 config.go:199] "Starting service config controller"
I0723 12:08:29.565063       1 shared_informer.go:350] "Waiting for caches to sync" controller="service config"
I0723 12:08:29.565096       1 config.go:440] "Starting serviceCIDR config controller"
I0723 12:08:29.565107       1 shared_informer.go:350] "Waiting for caches to sync" controller="serviceCIDR config"
I0723 12:08:29.665988       1 shared_informer.go:357] "Caches are synced" controller="service config"
I0723 12:08:29.666053       1 shared_informer.go:357] "Caches are synced" controller="node config"
I0723 12:08:29.666057       1 shared_informer.go:357] "Caches are synced" controller="endpoint slice config"
I0723 12:08:29.666161       1 shared_informer.go:357] "Caches are synced" controller="serviceCIDR config"


==> kube-scheduler [11e490afb387] <==
I0723 12:08:15.085291       1 serving.go:386] Generated self-signed cert in-memory
W0723 12:08:16.708962       1 requestheader_controller.go:204] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0723 12:08:16.709701       1 authentication.go:397] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0723 12:08:16.709766       1 authentication.go:398] Continuing without authentication configuration. This may treat all requests as anonymous.
W0723 12:08:16.709780       1 authentication.go:399] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0723 12:08:16.723086       1 server.go:171] "Starting Kubernetes Scheduler" version="v1.33.1"
I0723 12:08:16.723115       1 server.go:173] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0723 12:08:16.724355       1 configmap_cafile_content.go:205] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0723 12:08:16.724390       1 shared_informer.go:350] "Waiting for caches to sync" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0723 12:08:16.724421       1 secure_serving.go:211] Serving securely on 127.0.0.1:10259
I0723 12:08:16.724489       1 tlsconfig.go:243] "Starting DynamicServingCertificateController"
E0723 12:08:16.725084       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_amd64.s:1700" type="*v1.ConfigMap"
E0723 12:08:16.726877       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E0723 12:08:16.727016       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E0723 12:08:16.727028       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
E0723 12:08:16.727112       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0723 12:08:16.727162       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E0723 12:08:16.727193       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E0723 12:08:16.727235       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E0723 12:08:16.727296       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0723 12:08:16.727345       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E0723 12:08:16.727369       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E0723 12:08:16.727396       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E0723 12:08:16.727435       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E0723 12:08:16.727476       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E0723 12:08:16.727530       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIDriver"
E0723 12:08:16.727642       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E0723 12:08:17.666257       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Node: nodes is forbidden: User \"system:kube-scheduler\" cannot list resource \"nodes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Node"
E0723 12:08:17.764208       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Namespace: namespaces is forbidden: User \"system:kube-scheduler\" cannot list resource \"namespaces\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Namespace"
E0723 12:08:17.787026       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicasets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicaSet"
E0723 12:08:17.814552       1 reflector.go:200] "Failed to watch" err="failed to list *v1.VolumeAttachment: volumeattachments.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"volumeattachments\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.VolumeAttachment"
E0723 12:08:17.818565       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csinodes\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSINode"
E0723 12:08:17.854816       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csistoragecapacities\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIStorageCapacity"
E0723 12:08:17.937898       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"storageclasses\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StorageClass"
E0723 12:08:17.972025       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumes\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolume"
E0723 12:08:18.002914       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User \"system:kube-scheduler\" cannot list resource \"poddisruptionbudgets\" in API group \"policy\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PodDisruptionBudget"
E0723 12:08:18.014088       1 reflector.go:200] "Failed to watch" err="failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User \"system:kube-scheduler\" cannot list resource \"persistentvolumeclaims\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.PersistentVolumeClaim"
E0723 12:08:18.029416       1 reflector.go:200] "Failed to watch" err="failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User \"system:kube-scheduler\" cannot list resource \"statefulsets\" in API group \"apps\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.StatefulSet"
E0723 12:08:18.052646       1 reflector.go:200] "Failed to watch" err="failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User \"system:kube-scheduler\" cannot list resource \"csidrivers\" in API group \"storage.k8s.io\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.CSIDriver"
E0723 12:08:18.104892       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Pod: pods is forbidden: User \"system:kube-scheduler\" cannot list resource \"pods\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Pod"
E0723 12:08:18.139507       1 reflector.go:200] "Failed to watch" err="failed to list *v1.Service: services is forbidden: User \"system:kube-scheduler\" cannot list resource \"services\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.Service"
E0723 12:08:18.286078       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ConfigMap: configmaps \"extension-apiserver-authentication\" is forbidden: User \"system:kube-scheduler\" cannot list resource \"configmaps\" in API group \"\" in the namespace \"kube-system\"" logger="UnhandledError" reflector="runtime/asm_amd64.s:1700" type="*v1.ConfigMap"
E0723 12:08:18.303180       1 reflector.go:200] "Failed to watch" err="failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User \"system:kube-scheduler\" cannot list resource \"replicationcontrollers\" in API group \"\" at the cluster scope" logger="UnhandledError" reflector="k8s.io/client-go/informers/factory.go:160" type="*v1.ReplicationController"
I0723 12:08:21.324751       1 shared_informer.go:357] "Caches are synced" controller="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"


==> kubelet <==
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.594484    2290 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
Jul 23 12:08:19 minikube kubelet[2290]: E0723 12:08:19.595089    2290 eviction_manager.go:267] "eviction manager: failed to check if we have separate container filesystem. Ignoring." err="no imagefs label for configured runtime"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.706073    2290 kubelet_node_status.go:75] "Attempting to register node" node="minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.735550    2290 kubelet_node_status.go:124] "Node was previously registered" node="minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.735653    2290 kubelet_node_status.go:78] "Successfully registered node" node="minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.736321    2290 kubelet_network_linux.go:49] "Initialized iptables rules." protocol="IPv4"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.746478    2290 setters.go:618] "Node became not ready" node="minikube" condition={"type":"Ready","status":"False","lastHeartbeatTime":"2025-07-23T12:08:19Z","lastTransitionTime":"2025-07-23T12:08:19Z","reason":"KubeletNotReady","message":"PLEG is not healthy: pleg has yet to be successful"}
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.766291    2290 kubelet_network_linux.go:49] "Initialized iptables rules." protocol="IPv6"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.766348    2290 status_manager.go:230] "Starting to sync pod status with apiserver"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.766369    2290 watchdog_linux.go:127] "Systemd watchdog is not enabled or the interval is invalid, so health checking will not be started."
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.766374    2290 kubelet.go:2436] "Starting kubelet main sync loop"
Jul 23 12:08:19 minikube kubelet[2290]: E0723 12:08:19.766433    2290 kubelet.go:2460] "Skipping pod synchronization" err="PLEG is not healthy: pleg has yet to be successful"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.867530    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-scheduler-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.867625    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.867633    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.867785    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932316    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932405    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-certs\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932422    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932430    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932442    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932450    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932458    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932466    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/3924ef3609584191d8d09190210d2d78-etcd-data\") pod \"etcd-minikube\" (UID: \"3924ef3609584191d8d09190210d2d78\") " pod="kube-system/etcd-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932474    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932485    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932494    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/0378f173c980f85a71d36305bacb0ad1-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"0378f173c980f85a71d36305bacb0ad1\") " pod="kube-system/kube-controller-manager-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932501    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/feee622ba49882ef945e2406d3ba86df-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"feee622ba49882ef945e2406d3ba86df\") " pod="kube-system/kube-scheduler-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932516    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932524    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: I0723 12:08:19.932531    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/78e1292e1d47cc7d09b2c6f5826fa624-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"78e1292e1d47cc7d09b2c6f5826fa624\") " pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:19 minikube kubelet[2290]: E0723 12:08:19.941941    2290 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Jul 23 12:08:20 minikube kubelet[2290]: I0723 12:08:20.525626    2290 apiserver.go:52] "Watching apiserver"
Jul 23 12:08:20 minikube kubelet[2290]: I0723 12:08:20.530097    2290 desired_state_of_world_populator.go:158] "Finished populating initial desired state of world"
Jul 23 12:08:20 minikube kubelet[2290]: I0723 12:08:20.808888    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:20 minikube kubelet[2290]: I0723 12:08:20.809862    2290 kubelet.go:3309] "Creating a mirror pod for static pod" pod="kube-system/etcd-minikube"
Jul 23 12:08:20 minikube kubelet[2290]: E0723 12:08:20.843375    2290 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Jul 23 12:08:20 minikube kubelet[2290]: E0723 12:08:20.853554    2290 kubelet.go:3311] "Failed creating a mirror pod" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Jul 23 12:08:20 minikube kubelet[2290]: I0723 12:08:20.996567    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=1.9965454230000002 podStartE2EDuration="1.996545423s" podCreationTimestamp="2025-07-23 12:08:19 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:20.853265472 +0000 UTC m=+1.373973749" watchObservedRunningTime="2025-07-23 12:08:20.996545423 +0000 UTC m=+1.517253703"
Jul 23 12:08:21 minikube kubelet[2290]: I0723 12:08:21.013276    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=2.013258932 podStartE2EDuration="2.013258932s" podCreationTimestamp="2025-07-23 12:08:19 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:20.99666182 +0000 UTC m=+1.517370101" watchObservedRunningTime="2025-07-23 12:08:21.013258932 +0000 UTC m=+1.533967205"
Jul 23 12:08:21 minikube kubelet[2290]: I0723 12:08:21.152668    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=3.152653601 podStartE2EDuration="3.152653601s" podCreationTimestamp="2025-07-23 12:08:18 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:21.013628407 +0000 UTC m=+1.534336690" watchObservedRunningTime="2025-07-23 12:08:21.152653601 +0000 UTC m=+1.673361878"
Jul 23 12:08:21 minikube kubelet[2290]: I0723 12:08:21.171875    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=2.1718543439999998 podStartE2EDuration="2.171854344s" podCreationTimestamp="2025-07-23 12:08:19 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:21.152836806 +0000 UTC m=+1.673545083" watchObservedRunningTime="2025-07-23 12:08:21.171854344 +0000 UTC m=+1.692562622"
Jul 23 12:08:27 minikube kubelet[2290]: I0723 12:08:27.269428    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-xtables-lock\") pod \"kube-proxy-wm7sm\" (UID: \"e3d9af2f-f4e0-4d17-97bd-1c461a175a9a\") " pod="kube-system/kube-proxy-wm7sm"
Jul 23 12:08:27 minikube kubelet[2290]: I0723 12:08:27.269493    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-xgbsp\" (UniqueName: \"kubernetes.io/projected/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-kube-api-access-xgbsp\") pod \"kube-proxy-wm7sm\" (UID: \"e3d9af2f-f4e0-4d17-97bd-1c461a175a9a\") " pod="kube-system/kube-proxy-wm7sm"
Jul 23 12:08:27 minikube kubelet[2290]: I0723 12:08:27.269515    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-lib-modules\") pod \"kube-proxy-wm7sm\" (UID: \"e3d9af2f-f4e0-4d17-97bd-1c461a175a9a\") " pod="kube-system/kube-proxy-wm7sm"
Jul 23 12:08:27 minikube kubelet[2290]: I0723 12:08:27.269538    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-kube-proxy\") pod \"kube-proxy-wm7sm\" (UID: \"e3d9af2f-f4e0-4d17-97bd-1c461a175a9a\") " pod="kube-system/kube-proxy-wm7sm"
Jul 23 12:08:27 minikube kubelet[2290]: E0723 12:08:27.375024    2290 projected.go:289] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
Jul 23 12:08:27 minikube kubelet[2290]: E0723 12:08:27.375073    2290 projected.go:194] Error preparing data for projected volume kube-api-access-xgbsp for pod kube-system/kube-proxy-wm7sm: configmap "kube-root-ca.crt" not found
Jul 23 12:08:27 minikube kubelet[2290]: E0723 12:08:27.375339    2290 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-kube-api-access-xgbsp podName:e3d9af2f-f4e0-4d17-97bd-1c461a175a9a nodeName:}" failed. No retries permitted until 2025-07-23 12:08:27.875300804 +0000 UTC m=+6.092012526 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-xgbsp" (UniqueName: "kubernetes.io/projected/e3d9af2f-f4e0-4d17-97bd-1c461a175a9a-kube-api-access-xgbsp") pod "kube-proxy-wm7sm" (UID: "e3d9af2f-f4e0-4d17-97bd-1c461a175a9a") : configmap "kube-root-ca.crt" not found
Jul 23 12:08:31 minikube kubelet[2290]: I0723 12:08:31.479367    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/kube-proxy-wm7sm" podStartSLOduration=4.479329208 podStartE2EDuration="4.479329208s" podCreationTimestamp="2025-07-23 12:08:27 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:30.614050834 +0000 UTC m=+8.830762549" watchObservedRunningTime="2025-07-23 12:08:31.479329208 +0000 UTC m=+9.696040924"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.241584    2290 kuberuntime_manager.go:1746] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.242252    2290 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.474092    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/3527f67a-bc36-4564-aac0-245ed403ff54-config-volume\") pod \"coredns-674b8bbfcf-9wcc4\" (UID: \"3527f67a-bc36-4564-aac0-245ed403ff54\") " pod="kube-system/coredns-674b8bbfcf-9wcc4"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.474156    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/c1b388db-f9da-4f39-84d3-27a387df6d47-tmp\") pod \"storage-provisioner\" (UID: \"c1b388db-f9da-4f39-84d3-27a387df6d47\") " pod="kube-system/storage-provisioner"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.474168    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-b22tq\" (UniqueName: \"kubernetes.io/projected/c1b388db-f9da-4f39-84d3-27a387df6d47-kube-api-access-b22tq\") pod \"storage-provisioner\" (UID: \"c1b388db-f9da-4f39-84d3-27a387df6d47\") " pod="kube-system/storage-provisioner"
Jul 23 12:08:32 minikube kubelet[2290]: I0723 12:08:32.474198    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-s9jp6\" (UniqueName: \"kubernetes.io/projected/3527f67a-bc36-4564-aac0-245ed403ff54-kube-api-access-s9jp6\") pod \"coredns-674b8bbfcf-9wcc4\" (UID: \"3527f67a-bc36-4564-aac0-245ed403ff54\") " pod="kube-system/coredns-674b8bbfcf-9wcc4"
Jul 23 12:08:34 minikube kubelet[2290]: I0723 12:08:34.430127    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=13.430106689 podStartE2EDuration="13.430106689s" podCreationTimestamp="2025-07-23 12:08:21 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:34.429792304 +0000 UTC m=+12.646504020" watchObservedRunningTime="2025-07-23 12:08:34.430106689 +0000 UTC m=+12.646818448"
Jul 23 12:08:35 minikube kubelet[2290]: I0723 12:08:35.493602    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="kube-system/coredns-674b8bbfcf-9wcc4" podStartSLOduration=8.493582307 podStartE2EDuration="8.493582307s" podCreationTimestamp="2025-07-23 12:08:27 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2025-07-23 12:08:35.493407802 +0000 UTC m=+13.710119519" watchObservedRunningTime="2025-07-23 12:08:35.493582307 +0000 UTC m=+13.710294036"
Jul 23 12:09:02 minikube kubelet[2290]: I0723 12:09:02.670732    2290 reconciler_common.go:251] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-mm42q\" (UniqueName: \"kubernetes.io/projected/f5c7fda5-5cdf-4f50-9fad-ab15153187e9-kube-api-access-mm42q\") pod \"tic-tac-toe-deployment-c9c7bdd-k94k5\" (UID: \"f5c7fda5-5cdf-4f50-9fad-ab15153187e9\") " pod="default/tic-tac-toe-deployment-c9c7bdd-k94k5"
Jul 23 12:09:15 minikube kubelet[2290]: I0723 12:09:15.213265    2290 pod_startup_latency_tracker.go:104] "Observed pod startup duration" pod="default/tic-tac-toe-deployment-c9c7bdd-k94k5" podStartSLOduration=4.10545772 podStartE2EDuration="13.213242303s" podCreationTimestamp="2025-07-23 12:09:02 +0000 UTC" firstStartedPulling="2025-07-23 12:09:04.594584031 +0000 UTC m=+40.500930777" lastFinishedPulling="2025-07-23 12:09:13.702368607 +0000 UTC m=+49.608715360" observedRunningTime="2025-07-23 12:09:15.213129095 +0000 UTC m=+51.119475878" watchObservedRunningTime="2025-07-23 12:09:15.213242303 +0000 UTC m=+51.119589072"


==> storage-provisioner [e9ee0c70f326] <==
W0723 12:16:59.485405       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:16:59.491792       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:01.493707       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:01.499431       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:05.953898       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:05.963771       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:07.966722       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:07.973076       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:09.976090       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:09.980586       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:11.983508       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:11.989622       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:13.992432       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:14.002864       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:16.005678       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:16.012409       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:18.014626       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:18.020312       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:20.022662       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:20.038660       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:22.041131       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:22.046253       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:24.050176       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:24.055850       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:26.057913       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:26.069427       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:28.072275       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:28.150656       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:30.154731       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:30.324208       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:32.327567       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:32.426224       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:34.429330       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:34.671522       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:36.673592       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:36.730412       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:41.196733       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:41.214591       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:43.217814       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:43.470492       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:45.473532       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:45.713129       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:47.717104       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:47.778969       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:49.781995       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:49.802358       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:51.805296       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:52.091182       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:54.093976       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:54.164362       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:56.167038       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:56.469622       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:58.546703       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:17:58.551999       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:00.555024       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:00.610711       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:02.612856       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:02.655472       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:04.657779       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice
W0723 12:18:04.729452       1 warnings.go:70] v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice

